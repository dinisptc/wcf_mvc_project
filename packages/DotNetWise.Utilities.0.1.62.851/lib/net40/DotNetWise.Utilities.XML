<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetWise.Utilities</name>
    </assembly>
    <members>
        <member name="T:System.Linq.LinqToCSV">
            <summary>The LinqToCSV class</summary>
            <created author="laurentiu.macovei" date="Fri, 28 Jan 2011 15:17:03 GMT"/>
        </member>
        <member name="M:System.Linq.LinqToCSV.ToCsv``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Serializes the given IEnumerable elements to Comma Separated Value (CSV)</summary>
            <param name="items"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 28 Jan 2011 15:17:04 GMT"/>
        </member>
        <member name="M:System.Linq.LinqToCSV.ToCsvValue``1(``0)">
            <summary>Converts the given value to CSV</summary>
            <param name="item"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 28 Jan 2011 15:17:04 GMT"/>
        </member>
        <member name="T:System.Linq.ECachedEntryState">
            <summary>
            Cached entry states
            </summary>
        </member>
        <member name="F:System.Linq.ECachedEntryState.None">
            <summary>
            None: initial state
            </summary>
        </member>
        <member name="F:System.Linq.ECachedEntryState.Valid">
            <summary>
            Entry is valid
            </summary>
        </member>
        <member name="F:System.Linq.ECachedEntryState.Invalid">
            <summary>
            Entry was invalidated
            </summary>
        </member>
        <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProviderExtensions">
            <summary>
            Registers adapters for 
            EmailAttribute
            UrlAttribute
            CreditCardAttribute
            EqualToAttribute
            FileExtensionAttribute
            NumericAttribute
            DigitsAttribute
            MinAttribute
            MaxAttribute
            DateAttribute
            IntegerAttribute
            CuitAttribute
            YearAttribute
            </summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:21:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProviderExtensions.RegisterValidationExtensions">
            <summary>
            </summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:21:10 GMT"/>
        </member>
        <member name="T:System.InformationMessage">
            <summary>The InformationMessage class</summary>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 16:25:19 GMT"/>
        </member>
        <member name="P:System.InformationMessage.Success">
            <summary>Gets or sets the Success</summary>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 16:25:19 GMT"/>
        </member>
        <member name="P:System.InformationMessage.Platform">
            <summary>Gets or sets the Platform</summary>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 16:25:19 GMT"/>
        </member>
        <member name="P:System.InformationMessage.OS">
            <summary>Gets or sets the OS</summary>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 16:25:19 GMT"/>
        </member>
        <member name="P:System.InformationMessage.DotNetFramework">
            <summary>Gets or sets the DotNetFramework</summary>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 16:25:19 GMT"/>
        </member>
        <member name="P:System.InformationMessage.Message">
            <summary>Gets or sets the Message</summary>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 16:25:20 GMT"/>
        </member>
        <member name="T:System.LateBoundMethod">
            <summary>The LateBoundMethod event handler</summary>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 03:13:43 GMT"/>
        </member>
        <member name="T:System.DelegateFactory">
            <summary>Creates fast delegates to methods by using compiled lambda expressions. 
            <para>This is faster than reflection if you cache de delegates</para></summary>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 03:13:43 GMT"/>
        </member>
        <member name="M:System.DelegateFactory.CreateParameterExpressions(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
            <summary>
            </summary>
            <param name="method"></param>
            <param name="argumentsParameter"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 03:13:43 GMT"/>
        </member>
        <member name="M:System.DelegateFactory.Create(System.Reflection.MethodInfo)">
            <summary>Creates a compiled lambda expression for the given methodInfo</summary>
            <param name="method"></param>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 03:13:43 GMT"/>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.MaxAttribute">
            <summary>The MaxAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:29 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MaxAttribute.#ctor(System.Int32)">
            <summary>Creates a new instance of MaxAttribute</summary>
            <param name="max"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:30 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MaxAttribute.#ctor(System.String,System.Int32)">
            <summary>Creates a new instance of MaxAttribute</summary>
            <param name="errorMessage"></param>
            <param name="max"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:30 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MaxAttribute.#ctor(System.Double)">
            <summary>Creates a new instance of MaxAttribute</summary>
            <param name="max"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:30 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MaxAttribute.#ctor(System.String,System.Double)">
            <summary>Creates a new instance of MaxAttribute</summary>
            <param name="errorMessage"></param>
            <param name="max"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:30 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MaxAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:31 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MaxAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:32 GMT"/>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.MaxAttribute.Max">
            <summary>Gets the Max value as object</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:24:31 GMT"/>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.DigitsAttribute">
            <summary>The DigitsAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:26:54 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DigitsAttribute.#ctor">
            <summary>Creates a new instance of DigitsAttribute</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:26:54 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DigitsAttribute.#ctor(System.String)">
            <summary>Creates a new instance of DigitsAttribute</summary>
            <param name="errorMessage"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:26:54 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DigitsAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:26:54 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DigitsAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:26:54 GMT"/>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.CuitAttribute">
            <summary>The CuitAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:38 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CuitAttribute.#ctor">
            <summary>Creates a new instance of CuitAttribute</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:39 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CuitAttribute.#ctor(System.String)">
            <summary>Creates a new instance of CuitAttribute</summary>
            <param name="errorMessage"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:39 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CuitAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:40 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CuitAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:40 GMT"/>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.CuitAttribute.Regex">
            <summary>Gets the Regex</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:39 GMT"/>
        </member>
        <member name="T:System.Linq.CachedQueryOptions">
            <summary>
            Extra options to for the cached query. 
            </summary>
        </member>
        <member name="P:System.Linq.CachedQueryOptions.UtcQueryTime">
            <summary>
            The UTC time when the result was obtained. 
            If the result is from query, the time is taken when the query iteration starts.
            If the result is from cache, the time is taken when the complete result was added to the cache.
            </summary>
        </member>
        <member name="P:System.Linq.CachedQueryOptions.DataSource">
            <summary>
            Where was the result returned from: from query or from cache
            </summary>
        </member>
        <member name="P:System.Linq.CachedQueryOptions.OnInvalidated">
            <summary>
            Event raised when the query is invalidated by the server.
            Only the CachedQueryOptions for a result returned from the query raise this event.
            </summary>
        </member>
        <member name="P:System.Linq.CachedQueryOptions.Tag">
            <summary>
            Arbitrary object to be passed as an argument to the OnInvalidated event handler.
            </summary>
        </member>
        <member name="T:System.Globalization.I18N">
            <summary>A transparent localizable class which represents the properties and methods that are needed in order to render a view that uses ASP.NET Razor syntax.</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:28:10 GMT"/>
            <summary>A transparent localizable class which represents the properties and methods that are needed in order to render a view that uses ASP.NET Razor syntax.</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:21:16 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N._(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetString</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:47:10 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <param name="text">The text to be translated</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:47:15 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.Format(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>GetString</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:47:20 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.__q(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))))+'"' to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            	<para>Usage: &lt;input type="submit" value=@__q("Save") /&gt;  -- Note the missing quotes!</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="text">The html text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.___q(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, htmlArguments))+'"' to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            	<para>Usage: &lt;div title=@___q("&lt; class='tip'&gt;There are {0} {1} in cart.&lt;/div&gt;", 3, "&lt;b&gt;Items&lt;/b&gt;")&gt;...  -- Note the missing quotes!</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="text">The html text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.__(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetHtml</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:49:22 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.GetHtml(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:49:22 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.FormatHtml(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>GetHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:49:22 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.___(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:46:39 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.GetRaw(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:46:44 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.FormatRaw(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>GetRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:46:51 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.___(System.Globalization.CultureInfo,System.String,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="text">The text to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:46:56 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.GetRaw(System.Globalization.CultureInfo,System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:47:00 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.FormatRaw(System.Globalization.CultureInfo,System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:47:04 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N._s(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralString</c> and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:21:19 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.GetPluralString(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:22:00 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.FormatPlural(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>GetPluralString</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:22:00 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.__s(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:24:19 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.GetPluralHtml(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> (2 underscores) and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 23:24:15 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.FormatHtmlPlural(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
        </member>
        <member name="M:System.Globalization.I18N.___s(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
        </member>
        <member name="M:System.Globalization.I18N.GetPluralRaw(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
        </member>
        <member name="M:System.Globalization.I18N.FormatRawPlural(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
        </member>
        <member name="M:System.Globalization.I18N.___s(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:09:53 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.GetPluralRaw(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:12:07 GMT"/>
        </member>
        <member name="M:System.Globalization.I18N.FormatRawPlural(System.Globalization.CultureInfo,System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="culture">The culture being extended</param>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:13:54 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor(System.String,System.String)">
            <summary>
            Provide the allowed file extensions, seperated via "|" (or a comma, ","), defaults to "png|jpe?g|gif" 
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ClientValidation.Adapters.NumericAttributeAdapter">
            <summary>The NumericAttributeAdapter class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:54:27 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.NumericAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.NumericAttribute)">
            <summary>Creates a new instance of NumericAttributeAdapter</summary>
            <param name="metadata"></param>
            <param name="context"></param>
            <param name="attribute"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:54:27 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.NumericAttributeAdapter.GetClientValidationRules">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:54:27 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.NumericAttributeAdapter.IsNumericType(System.Type)">
            <summary>
            </summary>
            <param name="type"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:54:27 GMT"/>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library">
            <summary>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
            <summary>The library class</summary>
            <created author="laurentiu.macovei" date="Mon, 28 Jun 2010 19:32:04 GMT"/>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.#ctor">
            <summary>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.SetModuleId(System.Guid)">
            <summary>Sets the moduleId</summary>
            <param name="moduleId"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 29 Jun 2010 15:24:48 GMT"/>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.name">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.about">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.dependinces">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.files">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.css">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.module">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (name, about, dependinces?, files*, css*, module?)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.FilePath">
            <summary>Gets or sets the FilePath</summary>
            <created author="laurentiu.macovei" date="Mon, 28 Jun 2010 19:32:04 GMT"/>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.Id">
            <summary>Gets or sets the Id</summary>
            <created author="laurentiu.macovei" date="Tue, 29 Jun 2010 15:04:02 GMT"/>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType">
            <summary>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType.#ctor">
            <summary>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType.version">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType.description">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType.author">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType.company">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType.url">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.aboutLocalType.date">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (version, description, author, company, url, date)
            </para>
            </summary>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library.dependincesLocalType">
            <summary>
            <para>
            Regular expression: (library*)
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.dependincesLocalType.#ctor">
            <summary>
            <para>
            Regular expression: (library*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.dependincesLocalType.library">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (library*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.dependincesLocalType.libraryLocalType.name">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library.filesLocalType">
            <summary>
            <para>
            Regular expression: (file*)
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.filesLocalType.#ctor">
            <summary>
            <para>
            Regular expression: (file*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.filesLocalType.file">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (file*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.filesLocalType.path">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.filesLocalType.fileLocalType.name">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.filesLocalType.fileLocalType.preload">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library.cssLocalType">
            <summary>
            <para>
            Regular expression: (file+)
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.cssLocalType.#ctor">
            <summary>
            <para>
            Regular expression: (file+)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.cssLocalType.file">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (file+)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.cssLocalType.path">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.cssLocalType.fileLocalType.name">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.cssLocalType.fileLocalType.preload">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType">
            <summary>
            <para>
            Regular expression: (authorization, server?)?
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.#ctor">
            <summary>
            <para>
            Regular expression: (authorization, server?)?
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.authorization">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (authorization, server?)?
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.server">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (authorization, server?)?
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.type">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.class">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.privileges">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.allow">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.deny">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.authorizationLocalType">
            <summary>
            <para>
            Regular expression: (privilege*)
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.authorizationLocalType.#ctor">
            <summary>
            <para>
            Regular expression: (privilege*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.authorizationLocalType.privilege">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (privilege*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.authorizationLocalType.privilegeLocalType.allow">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.authorizationLocalType.privilegeLocalType.deny">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.authorizationLocalType.privilegeLocalType.name">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.serverLocalType">
            <summary>
            <para>
            Regular expression: (method*)
            </para>
            </summary>
        </member>
        <member name="M:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.serverLocalType.#ctor">
            <summary>
            <para>
            Regular expression: (method*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.serverLocalType.method">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (method*)
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.serverLocalType.class">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.serverLocalType.url">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:www.dotnetwise.com.desktop.v1_0.library.moduleLocalType.serverLocalType.methodLocalType.name">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:System.Web.Mvc.HtmlEncodeAttribute">
            <summary>Specify whether a property should be automatically html-encoded to prevent XSS</summary>
            <created author="laurentiu.macovei" date="Mon, 11 Apr 2011 23:44:22 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlEncodeAttribute.#ctor(System.Boolean)">
            <summary>Creates a new instance of HtmlEncodeAttribute</summary>
            <param name="encode"></param>
            <created author="laurentiu.macovei" date="Mon, 11 Apr 2011 23:44:22 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.HtmlEncodeAttribute.Encode">
            <summary>
            Specify true to automatically encode this property, or false to keep the text the user entered.
            <para>Warning! Letting the text un-encoded might be a security issue such as XSS, code injection etc!</para></summary>
            <created author="laurentiu.macovei" date="Mon, 11 Apr 2011 23:44:22 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.LocalizableWebViewPage">
            <summary>A transparent localizable class which represents the properties and methods that are needed in order to render a view that uses ASP.NET Razor syntax.</summary>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 13:34:48 GMT"/>
            <summary>A transparent localizable class which represents the properties and methods that are needed in order to render a view that uses ASP.NET Razor syntax.</summary>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 13:34:48 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage._(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetString</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:54 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetString(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <param name="text">The text to be translated</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 17:52:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.Format(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>GetString</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:49 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.__(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetHtml</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:45 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetHtml(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.FormatHtml(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>GetHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:02:50 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.__q(System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))))+'"' to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            	<para>Usage: &lt;input type="submit" value=@__q("Save") /&gt;  -- Note the missing quotes!</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.___q(System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, htmlArguments))+'"' to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            	<para>Usage: &lt;div title=@___q("&lt; class='tip'&gt;There are {0} {1} in cart.&lt;/div&gt;", 3, "&lt;b&gt;Items&lt;/b&gt;")&gt;...  -- Note the missing quotes!</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.___(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:12:40 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetRaw(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:15:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.FormatRaw(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>GetRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.___(System.String,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:47:27 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetRaw(System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:47:17 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.FormatRaw(System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:25:01 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage._s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralString</c> and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:22:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetPluralString(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:24:55 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.FormatPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>GetPluralString</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:25:23 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.__s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:28:20 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetPluralHtml(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> (2 underscores) and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:32:19 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.FormatHtmlPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:33:25 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.___s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:55:00 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetPluralRaw(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:55:00 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.FormatRawPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:49:47 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.___s(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:09:53 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.GetPluralRaw(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:12:07 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage.FormatRawPlural(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:13:54 GMT"/>
        </member>
        <member name="T:GenericExtenders">
            <summary>The GenericExtenders class</summary>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:46 GMT"/>
        </member>
        <member name="M:GenericExtenders.ToHtml(System.String)">
            <summary>Returns the string as HtmlString so it won't be encoded</summary>
            <param name="html">The string to be returned</param>
            <created author="laurentiu.macovei" date="Tue, 05 Apr 2011 18:02:57 GMT"/>
        </member>
        <member name="M:GenericExtenders.Concat``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>Concatenates two sequences.</summary>
            <param name="source">The source where to concatenate the intems on</param>
            <param name="items">The items to be concatenated</param>
            <created author="laurentiu.macovei" date="Mon, 04 Apr 2011 00:24:06 GMT"/>
        </member>
        <member name="M:GenericExtenders.AsArray``1(``0)">
            <summary>Returns an array with the members of the object sent.</summary>
            <param name="item">The item to be wrapped in an array</param>
            <created author="tudor.dumitriu" date="Tue, 15 Mar 2011 12:24:38 GMT"/>
        </member>
        <member name="M:GenericExtenders.ToEnumerable``1(``0)">
            <summary>Returns an array with the members of the object sent.</summary>
            <param name="item">The item to be wrapped as an IEnumerable&lt;<typeparamref name="T"/>&gt;</param>
        </member>
        <member name="M:GenericExtenders.WhereBy``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>Applies the where expression only if not null</summary>
            <param name="query">The query to apply the where expression</param>
            <param name="expression">The expression to be applied as where clause. It's safe to be null</param>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 02:37:27 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(``0,``0[])">
            <summary>
            Determines whether a sequence contains a specified element by using the default
            equality comparer.
            </summary>
            <param name="source"></param>
            <param name="list"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains a specified element by using the default
            equality comparer.
            </summary>
            <param name="source">The value to locate in the sequence.</param>
            <param name="list">A sequence in which to locate a value.</param>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(``0,System.Collections.Generic.IEqualityComparer{``0},``0[])">
            <summary>
            Determines whether a sequence contains a specified element by using a specified
            System.Collections.Generic.IEqualityComparer&lt;<typeparamref name="T"/>&gt;.
            </summary>
            <param name="source">The value to locate in the sequence.</param>
            <param name="comparer">An equality comparer to compare values.</param>
            <param name="list">A sequence in which to locate a value.</param>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(``0,System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains a specified element by using a specified
            System.Collections.Generic.IEqualityComparer&lt;<typeparamref name="T"/>&gt;.
            </summary>
            <param name="source">The value to locate in the sequence.</param>
            <param name="comparer">An equality comparer to compare values.</param>
            <param name="list">A sequence in which to locate a value.</param>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>
            Determines whether a sequence contains a specified element by using the default
            equality comparer.
            </summary>
            <param name="source"></param>
            <param name="list"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains a specified element by using the default
            equality comparer.
            </summary>
            <param name="source">The value to locate in the sequence.</param>
            <param name="list">A sequence in which to locate a value.</param>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},``0[])">
            <summary>
            Determines whether a sequence contains a specified element by using a specified
            System.Collections.Generic.IEqualityComparer&lt;<typeparamref name="T"/>&gt;.
            </summary>
            <param name="source">The value to locate in the sequence.</param>
            <param name="comparer">An equality comparer to compare values.</param>
            <param name="list">A sequence in which to locate a value.</param>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.In``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains a specified element by using a specified
            System.Collections.Generic.IEqualityComparer&lt;<typeparamref name="T"/>&gt;.
            </summary>
            <param name="source">The value to locate in the sequence.</param>
            <param name="comparer">An equality comparer to compare values.</param>
            <param name="list">A sequence in which to locate a value.</param>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.Do``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            </summary>
            <param name="source"></param>
            <param name="action"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>Executes an action for every item in the collection</summary>
            <param name="source">The collection to be enumerated</param>
            <param name="action">The action with the item and the index to be executed for each item in the collection</param>
            <created author="laurentiu.macovei" date="Sun, 13 Mar 2011 21:14:47 GMT"/>
        </member>
        <member name="M:GenericExtenders.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>Executes an action for every item in the collection. The action gets the item and its zero-based index</summary>
            <param name="source">The collection to be enumerated</param>
            <param name="action">The action with the item and the index to be executed for each item in the collection</param>
            <created author="laurentiu.macovei" date="Wed, 06 Apr 2011 13:42:58 GMT"/>
        </member>
        <member name="M:GenericExtenders.Split(System.String,System.StringSplitOptions,System.Char[])">
            <summary>Returns a string array that contains the substrings in this string that are delimited by elements of a specified Unicode character array. A parameter specifies whether to return empty array elements.</summary>
            <param name="value">The string value to be split</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit empty array elements from the array returned, or System.StringSplitOptions.None to include empty array elements in the array returned.</param>
            <param name="separators">An array of Unicode characters that delimit the substrings in this string, an empty array that contains no delimiters, or null.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:51:23 GMT"/>
        </member>
        <member name="M:GenericExtenders.Split(System.String,System.Char,System.StringSplitOptions)">
            <summary>Returns a string array that contains the substrings in this string that are delimited by elements of a specified Unicode character. A parameter specifies whether to return empty array elements.</summary>
            <param name="value">The string value to be split</param>
            <param name="separator">An Unicode character that delimit the substrings in this string</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit empty array elements from the array returned, or System.StringSplitOptions.None to include empty array elements in the array returned.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:51:23 GMT"/>
        </member>
        <member name="M:GenericExtenders.Split(System.String,System.Char,System.Int32)">
            <summary>Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character. A parameter specifies the maximum number of substrings to return.</summary>
            <param name="value">The string value to be split</param>
            <param name="separator">An Unicode character that delimit the substrings in this string</param>
            <param name="count">The maximum number of substrings to return.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:56:28 GMT"/>
        </member>
        <member name="M:GenericExtenders.Split(System.String,System.Int32,System.Char[])">
            <summary>Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character array. A parameter specifies the maximum number of substrings to return.</summary>
            <param name="value">The string value to be split</param>
            <param name="separators">An array of Unicode characters that delimit the substrings in this string, an empty array that contains no delimiters, or null.</param>
            <param name="count">The maximum number of substrings to return.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:56:28 GMT"/>
        </member>
        <member name="M:GenericExtenders.MergeWith(System.Collections.IDictionary,System.Collections.IDictionary[])">
            <summary>Extends the given extender with the provided extendees by updating its properties</summary>
            <param name="extender">The source where all the extendees options will be added</param>
            <param name="extendees">Optional more extendees to be added</param>
            <returns>The given extender</returns>
            <created author="laurentiu.macovei" date="Fri, 05 Mar 2010 17:52:48 GMT"/>
        </member>
        <member name="M:GenericExtenders.MergeWith(System.Collections.IDictionary,System.Collections.Generic.IEnumerable{System.Collections.IDictionary})">
            <summary>Extends the given extender with the provided extendees by updating its properties</summary>
            <param name="extender">The source where all the extendees options will be added</param>
            <param name="extendees">An enumerable list of extendees to be added</param>
            <returns>The given extender</returns>
            <created author="laurentiu.macovei" date="Fri, 05 Mar 2010 17:52:48 GMT"/>
        </member>
        <member name="M:GenericExtenders.MergeWith``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1}[])">
            <summary>Extends the given extender with the provided extendees by updating its properties</summary>
            <param name="extender">The source where all the extendees options will be added</param>
            <param name="extendees">Optional more extendees to be added</param>
            <returns>The given extender</returns>
            <created author="laurentiu.macovei" date="Fri, 05 Mar 2010 17:52:48 GMT"/>
        </member>
        <member name="M:GenericExtenders.MergeWith``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{``0,``1}})">
            <summary>Extends the given extender with the provided extendees by updating its properties</summary>
            <param name="extender">The source where all the extendees options will be added</param>
            <param name="extendees">An enumerable list of extendees to be added</param>
            <returns>The given extender</returns>
            <created author="laurentiu.macovei" date="Fri, 05 Mar 2010 17:52:48 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.HtmlPropertiesAttribute">
            <summary>The HtmlPropertiesAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:07 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.#ctor(System.Object[])">
            <summary>Creates a new instance of HtmlPropertiesAttribute</summary>
            <param name="htmlAttributes"></param>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:07 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
            <summary>
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
            <summary>
            </summary>
            <param name="key"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
            <summary>
            </summary>
            <param name="key"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
            <summary>
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            </summary>
            <param name="item"></param>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
            <summary>
            </summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            </summary>
            <param name="item"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            </summary>
            <param name="item"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:09 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.HtmlPropertiesAttribute.Merge(System.Object[])">
            <summary>
            </summary>
            <param name="arguments"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
            <summary>Gets the IDictionary&lt;string, object&gt;.Keys</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:07 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
            <summary>Gets the IDictionary&lt;string, object&gt;.Values</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
            <summary>Gets or sets the IDictionary&lt;string, object&gt;.this</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>Gets the ICollection&lt;KeyValuePair&lt;string, object&gt;&gt;.Count</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.HtmlPropertiesAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
            <summary>Gets the ICollection&lt;KeyValuePair&lt;string, object&gt;&gt;.IsReadOnly</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.HtmlPropertiesAttribute.HtmlAttributes">
            <summary>Gets or sets the HtmlAttributes</summary>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 19:43:08 GMT"/>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.YearAttribute">
            <summary>The YearAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:18 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.YearAttribute.#ctor">
            <summary>Creates a new instance of YearAttribute</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:19 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.YearAttribute.#ctor(System.String)">
            <summary>Creates a new instance of YearAttribute</summary>
            <param name="errorMessage"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:19 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.YearAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:19 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.YearAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:19 GMT"/>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.YearAttribute.Regex">
            <summary>Gets the Regex</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:19 GMT"/>
        </member>
        <member name="T:System.Globalization.Internationalization">
            <summary>The Internationalization class</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:18 GMT"/>
        </member>
        <member name="F:System.Globalization.Internationalization.DefaultWorkingLanguage">
            <summary>The language that MsgIDs are given in (generally the language the project is being developed in).</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:18 GMT"/>
        </member>
        <member name="F:System.Globalization.Internationalization.DefaultWorkingLanguageLCID">
            <summary>The default culture LCID</summary>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:59:18 GMT"/>
        </member>
        <member name="F:System.Globalization.Internationalization.BasePath">
            <summary>
            This is the base path under which localizations will   
            be stored.  
            </summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:18 GMT"/>
        </member>
        <member name="F:System.Globalization.Internationalization.HideAllLocalizedText">
            <summary>
            FOR TESTING ONLY!  If true, all calls to GetText will return an empty string.  
            this is useful when searching for any strings that might not be flagged for localization.  
            </summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:18 GMT"/>
        </member>
        <member name="F:System.Globalization.Internationalization.Localizations">
            <summary>
            The cached localization
            </summary>
        </member>
        <member name="M:System.Globalization.Internationalization.#cctor">
            <summary>Static constructor of Internationalization</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:18 GMT"/>
        </member>
        <member name="M:System.Globalization.Internationalization.GetMessage(System.String,System.String,System.Nullable{System.Int32})">
            <summary>Gets a translated message version of the supplied text message.</summary>
            <param name="msgID">Text to be translated</param>
            <param name="languageCode">Language to translate into</param>
            <param name="lcid">Specify the Culture LCID for faster access if you know it</param>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:19 GMT"/>
        </member>
        <member name="M:System.Globalization.Internationalization.GetText(System.String,System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>Gets a translated version of the supplied text message.</summary>
            <param name="msgID">Text to be translated</param>
            <param name="languageCode">Language to translate into</param>
            <param name="lcid">Specify the Culture LCID for faster access if you know it</param>
            <param name="plural">Specify whether you want the plural form of it or not</param>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:19 GMT"/>
        </member>
        <member name="M:System.Globalization.Internationalization.LCID(System.String)">
            <summary>
            </summary>
            <param name="cultureName"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:19 GMT"/>
        </member>
        <member name="M:System.Globalization.Internationalization.GetBestLanguage(System.Web.HttpRequest,System.String)">
            <summary>
            Spins through the language preferences in the supplied HttpRequest,
            returning the first complete or partial match on a loaded language.
            </summary>
            <param name="request"></param>
            <param name="fallback"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 14:55:19 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.LocalizableController">
            <summary>A transparent localizable class which Provides methods that respond to HTTP requests that are made to an ASP.NET MVC Web site.</summary>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 13:34:48 GMT"/>
            <summary>A transparent localizable class which Provides methods that respond to HTTP requests that are made to an ASP.NET MVC Web site.</summary>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 13:34:48 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController._(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetString</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:54 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetString(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <param name="text">The text to be translated</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 17:52:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.Format(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>GetString</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:49 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.__(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetHtml</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:45 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetHtml(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.FormatHtml(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>GetHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:02:50 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.__q(System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))))+'"' to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            	<para>Usage: &lt;input type="submit" value=@__q("Save") /&gt;  -- Note the missing quotes!</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.___q(System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, htmlArguments))+'"' to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            	<para>Usage: &lt;div title=@___q("&lt; class='tip'&gt;There are {0} {1} in cart.&lt;/div&gt;", 3, "&lt;b&gt;Items&lt;/b&gt;")&gt;...  -- Note the missing quotes!</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.___(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:12:40 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetRaw(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:15:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.FormatRaw(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>GetRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.___(System.String,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:47:27 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetRaw(System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:47:17 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.FormatRaw(System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:25:01 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController._s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralString</c> and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:22:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetPluralString(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:24:55 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.FormatPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>GetPluralString</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:25:23 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.__s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:28:20 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetPluralHtml(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> (2 underscores) and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:32:19 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.FormatHtmlPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:33:25 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.___s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:55:00 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetPluralRaw(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:55:00 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.FormatRawPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:49:47 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.___s(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:09:53 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.GetPluralRaw(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:12:07 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableController.FormatRawPlural(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:13:54 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.MvcExtendedMethods">
            <summary>The MvcExtendedMethods class</summary>
            <created author="laurentiu.macovei" date="Sat, 07 Jan 2012 18:15:27 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ImageLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
            <summary>A Simple ActionLink Image</summary>
            <param name="actionName">name of the action in controller</param>
            <param name="imgUrl">url of the image</param>
            <param name="alt">alt text of the image</param>
            <param name="helper">The html helper to extend</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 20:22:14 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ImageLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>A Simple ActionLink Image</summary>
            <param name="actionName">name of the action in controller</param>
            <param name="imgUrl">url of the iamge</param>
            <param name="alt">alt text of the image</param>
            <param name="helper">The HTML helper to extend</param>
            <param name="routeValues">An anonymous object with values to construct the route</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 20:22:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ImageLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>A Simple ActionLink Image</summary>
            <param name="actionName">name of the action in controller</param>
            <param name="imgUrl">url of the image</param>
            <param name="alt">alt text of the image</param>
            <param name="linkHtmlAttributes">attributes for the link</param>
            <param name="imageHtmlAttributes">attributes for the image</param>
            <param name="helper">The html helper being extended</param>
            <param name="routeValues">An anonymous object with values to construct the route</param>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 20:22:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ImageLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>A Simple ActionLink Image</summary>
            <param name="url">name of the action in controller</param>
            <param name="imgUrl">url of the image</param>
            <param name="alt">alt text of the image</param>
            <param name="linkHtmlAttributes">attributes for the link</param>
            <param name="imageHtmlAttributes">attributes for the image</param>
            <param name="helper">Thge HTML Helper to extend</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 20:22:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ChangeLanguage(System.Web.Mvc.UrlHelper,System.String)">
            <summary>Returns the url updated with the specified language</summary>
            <param name="helper">The url helper</param>
            <param name="language">The language you want to create the change to</param>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 20:22:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.GetPreviousWriters(System.Web.WebPages.WebPageBase)">
            <summary>
            </summary>
            <param name="page"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.GetSectionWritersStack(System.Web.WebPages.WebPageBase)">
            <summary>
            </summary>
            <param name="page"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.IsMobile``1(System.Web.HttpRequestBase,``0,``0)">
            <summary>Returns the value if the request came from a mobile browser</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="mobile">The value to be returned if Request.Browser.IsMobileDevice</param>
            <param name="notMobile">The value to be returned if !Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 17:45:19 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.NotMobile``1(System.Web.HttpRequestBase,``0,``0)">
            <summary>Returns the value if the request did NOT come from a mobile browser</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="mobile">The value to be returned if Request.Browser.IsMobileDevice</param>
            <param name="notMobile">The value to be returned if !Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 17:46:55 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.IsMobile(System.Web.HttpRequestBase,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Returns the mobileFunc's value if the request came from a mobile browser, otherwise notMobileFunc's value</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="mobileFunc">The value to be returned if Request.Browser.IsMobileDevice</param>
            <param name="notMobileFunc">The value to be returned if NOT Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 17:45:19 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.NotMobile(System.Web.HttpRequestBase,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Returns the notMobileFunc's value if the request did NOT came from a mobile browser, otherwise mobileFunc's value</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="mobileFunc">The value to be returned if Request.Browser.IsMobileDevice</param>
            <param name="notMobileFunc">The value to be returned if NOT Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 17:45:19 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.IsMobile(System.Web.HttpRequestBase)">
            <summary>Returns true if the request came from a mobile browser</summary>
            <param name="request">The httpRequest to extend</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 23:23:10 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.NotMobile(System.Web.HttpRequestBase)">
            <summary>Returns true if the request did not come from a mobile browser</summary>
            <param name="request">The httpRequest to extend</param>
            <created author="laurentiu.macovei" date="Thu, 26 Jan 2012 13:22:35 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.IsMobile``1(System.Web.HttpRequest,``0,``0)">
            <summary>Returns the value if the request came from a mobile browser</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="mobile">The value to be returned if Request.Browser.IsMobileDevice</param>
            <param name="notMobile">The value to be returned if !Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 26 Jan 2012 13:18:14 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.NotMobile``1(System.Web.HttpRequest,``0,``0)">
            <summary>Returns the value if the request did NOT come from a mobile browser</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="notMobile">The value to be returned if !Request.Browser.IsMobileDevice</param>
            <param name="mobile">The value to be returned if Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 26 Jan 2012 13:18:14 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.IsMobile(System.Web.HttpRequest,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Returns the mobileFunc's value if the request came from a mobile browser, otherwise notMobileFunc's value</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="mobileFunc">The value to be returned if Request.Browser.IsMobileDevice</param>
            <param name="notMobileFunc">The value to be returned if NOT Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 26 Jan 2012 13:18:14 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.NotMobile(System.Web.HttpRequest,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Returns the notMobileFunc's value if the request did NOT came from a mobile browser, otherwise mobileFunc's value</summary>
            <param name="request">The httpRequest to extend</param>
            <param name="mobileFunc">The value to be returned if Request.Browser.IsMobileDevice</param>
            <param name="notMobileFunc">The value to be returned if NOT Request.Browser.IsMobileDevice</param>
            <created author="laurentiu.macovei" date="Thu, 26 Jan 2012 13:18:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.IsMobile(System.Web.HttpRequest)">
            <summary>Returns true if the request came from a mobile browser</summary>
            <param name="request">The httpRequest to extend</param>
            <created author="laurentiu.macovei" date="Thu, 26 Jan 2012 13:18:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.True(System.Boolean,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Returns the trueValue if the codition is true otherwise falseValue</summary>
            <param name="condition">The condition to be evaluated</param>
            <param name="trueValue">The value to be returned if codition == true</param>
            <param name="falseValue">The value to be returned if condition == false</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 19:53:05 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.False(System.Boolean,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Returns the value if the codition is false</summary>
            <param name="condition">The condition to be evaluated</param>
            <param name="trueValue">The value to be returned if codition == true</param>
            <param name="falseValue">The value to be returned if condition == false</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 19:53:05 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.FixModel``1(System.Web.Mvc.ViewDataDictionary{``0},``0)">
            <summary>Keeps the current ViewData.Model if not null OR sets the given model if null</summary>
            <param name="viewData">The viewData to fix the model into</param>
            <param name="model">The default empty model if the ViewData.Model is null</param>
            <created author="laurentiu.macovei" date="Thu, 12 Jan 2012 19:14:25 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ToHtml(System.Web.WebPages.HelperResult)">
            <summary>Executes the helper and returns its MvcHtmlString output or null if the helper was null</summary>
            <param name="helper">The helper to execute the result of</param>
            <created author="laurentiu.macovei" date="Sat, 07 Jan 2012 18:15:29 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Renders the section with some new default content</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 09 Jan 2011 21:37:57 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.DefaultSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Web.Mvc.MvcExtendedMethods.DependentSection[])">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <param name="dependinces"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Web.Mvc.MvcExtendedMethods.DependentSection[])">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <param name="dependinces"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.String)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 11 Mar 2011 21:47:47 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.Web.Mvc.MvcHtmlString)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 11 Mar 2011 21:59:50 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RenderSectionAsHtml(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult},System.Web.Mvc.MvcExtendedMethods.DependentSection[])">
            <summary>Returns the MvcHtmlString of the given section if defined or the fallback default value</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <param name="dependinces"></param>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 02:55:35 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RenderSectionAsHtml(System.Web.WebPages.WebPageBase,System.String,System.String)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 02:55:35 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RenderSectionAsHtml(System.Web.WebPages.WebPageBase,System.String,System.Web.Mvc.MvcHtmlString)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 02:55:35 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RedefineSection(System.Web.WebPages.WebPageBase,System.String)">
            <summary>Redefines a section and keeps the old default content</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 09 Jan 2011 21:37:57 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RedefineSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Redefines a section with some new "default content"</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 09 Jan 2011 21:37:58 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.PurgeSections(System.Web.WebPages.WebPageBase,System.String,System.Boolean)">
            <summary>
            Deletes the comma separated sections so they will not be forwarded anymore, hence avoiding the error
            </summary>
            <param name="page"></param>
            <param name="sections"></param>
            <param name="onlyChildSections"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.RedefineSections(System.Web.WebPages.WebPageBase,System.String,System.String)">
            <summary>Redefines all the previous defined sections</summary>
            <param name="page"></param>
            <param name="includeSections">Specify which sections to be redefined. If null provided, all of them will be redefined</param>
            <param name="exceptSections">Specify which sections not to be redefined</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 12 Mar 2011 01:25:40 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.EnablePartialViewValidation(System.Web.Mvc.HtmlHelper)">
            <summary>Creates a form context in a partial view so that the unobtrusive validation will work</summary>
            <param name="helper"></param>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 04:24:37 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionLinkA(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String)">
            <summary>
            Returns an anchor element (a element) that contains the virtual path of the
            specified action.
            </summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="area">Specify the areas name where the controller resides <para>Specify "" - empty string for the root controllers</para></param>
            <returns>An anchor element (a element).</returns>
            <exception cref="T:System.ArgumentException">The linkText parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 14:56:26 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
            Returns an anchor element (a element) that contains the virtual path of the
            specified action.
            </summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="actionName">The name of the action.</param>
            <param name="routeValues">
            An object that contains the parameters for a route. The parameters are retrieved
            through reflection by examining the properties of the object. The object
            is typically created by using object initializer syntax.
            </param>
            <param name="controllerName">
            An object that contains the HTML attributes for the element. The attributes
            are retrieved through reflection by examining the properties of the object.
            The object is typically created by using object initializer syntax.
            </param>
            <returns>An anchor element (a element).</returns>
            <created author="laurentiu.macovei" date="Sat, 14 Jan 2012 01:07:14 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionLinkA(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor element (a element) that contains the virtual path of the
            specified action.
            </summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An object that contains the parameters for a route. The parameters are retrieved
            through reflection by examining the properties of the object. The object
            is typically created by using object initializer syntax.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="area">Specify the areas name where the controller resides <para>Specify "" - empty string for the root controllers</para></param>
            <returns>An anchor element (a element).</returns>
            <exception cref="T:System.ArgumentException">The linkText parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 14:56:26 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionLinkA(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor element (a element) that contains the virtual path of the
            specified action.
            </summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">An object that contains the parameters for a route.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="area">Specify the areas name where the controller resides <para>Specify "" - empty string for the root controllers</para></param>
            <returns>An anchor element (a element).</returns>
            <exception cref="T:System.ArgumentException">The linkText parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 14:56:26 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionLinkA(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor element (a element) that contains the virtual path of the
            specified action.
            </summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="hostName">The host name for the URL.</param>
            <param name="fragment">The URL fragment name (the anchor name).</param>
            <param name="routeValues">
            An object that contains the parameters for a route. The parameters are retrieved
            through reflection by examining the properties of the object. The object
            is typically created by using object initializer syntax.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="area">Specify the areas name where the controller resides <para>Specify "" - empty string for the root controllers</para></param>
            <returns>An anchor element (a element).</returns>
            <exception cref="T:System.ArgumentException">The linkText parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 14:56:26 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionLinkA(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor element (a element) that contains the virtual path of the
            specified action.
            </summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="hostName">The host name for the URL.</param>
            <param name="fragment">The URL fragment name (the anchor name).</param>
            <param name="routeValues">An object that contains the parameters for a route.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="area">Specify the areas name where the controller resides <para>Specify "" - empty string for the root controllers</para></param>
            <returns>An anchor element (a element).</returns>
            <exception cref="T:System.ArgumentException">The linkText parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 14:56:26 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionA(System.Web.Mvc.UrlHelper,System.String,System.String,System.String)">
            <summary>
                Generates a fully qualified URL to an action method by using the specified
                action name, controller name, and route values.
            </summary>
            <param name="url">The url being extended</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="area">The area name. "" or null to get main controllers action's url</param>
            <returns>The fully qualified URL to an action method.</returns>
            <created author="laurentiu.macovei" date="Thu, 19 Jan 2012 14:51:44 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionA(System.Web.Mvc.UrlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
                Generates a fully qualified URL to an action method by using the specified
                action name, controller name, and route values.
            </summary>
            <param name="url">The url being extended</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="area">The area name. "" or null to get main controllers action's url</param>
            <param name="routeValues">
             An object that contains the parameters for a route. The parameters are retrieved
             through reflection by examining the properties of the object. The object
             is typically created by using object initializer syntax.
            </param>
            <returns>The fully qualified URL to an action method.</returns>
            <created author="laurentiu.macovei" date="Thu, 19 Jan 2012 14:51:44 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionA(System.Web.Mvc.UrlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Generates a fully qualified URL to an action method by using the specified
            action name, controller name, route values.
            </summary>
            <param name="url">The url being extended</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">An object that contains the parameters for a route.</param>
            <param name="area">The area name. "" or null to get main controllers action's url</param>
            <returns>The fully qualified URL to an action method.</returns>
            <created author="laurentiu.macovei" date="Thu, 19 Jan 2012 14:51:44 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionA(System.Web.Mvc.UrlHelper,System.String,System.String,System.String,System.Object,System.String)">
            <summary>
                Generates a fully qualified URL to an action method by using the specified
                action name, controller name, route values, and protocol to use.
            </summary>
            <param name="url">The url being extended</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="routeValues">
             An object that contains the parameters for a route. The parameters are retrieved
             through reflection by examining the properties of the object. The object
             is typically created by using object initializer syntax.
            </param>
            <param name="area">The area name. "" or null to get main controllers action's url</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <returns>The fully qualified URL to an action method.</returns>
            <created author="laurentiu.macovei" date="Thu, 19 Jan 2012 14:51:44 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ActionA(System.Web.Mvc.UrlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
            <summary>
            Generates a fully qualified URL to an action method by using the specified
            action name, controller name, route values, protocol to use, and host name.
            </summary>
            <param name="url">The url being extended</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">An object that contains the parameters for a route.</param>
            <param name="area">The area name. "" or null to get main controllers action's url</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="hostName">The host name for the URL.</param>
            <returns>The fully qualified URL to an action method.</returns>
            <created author="laurentiu.macovei" date="Thu, 19 Jan 2012 14:51:44 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.ValidationSummaryEnhanced(System.Web.Mvc.HtmlHelper,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Returns an unordered list (ul element) of validation messages that are in
            the System.Web.Mvc.ModelStateDictionary object and optionally displays only
            model-level errors.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="excludeProperties">true to have the summary display model-level errors only, or false to have the summary display all errors.</param>
            <param name="errorMessage">The message to display with the validation summary when isValid is false or isValid==null &amp;&amp; ModelState.IsValid is false</param>
            <param name="successMessage">The message to display with the validation summary when isValid is true or isValid==null &amp;&amp; ModelState.IsValid is true</param>
            <param name="htmlAttributes">An anonymous object or a dictionary that contains the HTML attributes for the element.</param>
            <param name="displaySuccessMessage"></param>
            <param name="isValid"></param>
            <param name="lookFirstInViewBag">Specify whether to look first in the ViewBag. 
            <para>Key names:</para>
            <para>ValidationSummaryError</para>
            <para>ValidationSummarySuccess</para>
            <para>ValidationSummaryOperation</para>
            <para>ValidationSummaryDisplay</para>
            </param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Thu, 19 Jan 2012 14:51:45 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.MvcExtendedMethods.DependentSection">
            <summary>The DependentSection class</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcExtendedMethods.DependentSection.DefineDefaults(System.Web.WebPages.WebPageBase,System.Collections.Generic.Dictionary{System.String,System.Web.WebPages.SectionWriter}[])">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="previousWriters"></param>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.MvcExtendedMethods.DependentSection.Name">
            <summary>Gets or sets the Name</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.MvcExtendedMethods.DependentSection.DefaultContent">
            <summary>Gets or sets the DefaultContent</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.MvcExtendedMethods.DependentSection.Dependinces">
            <summary>Gets or sets the Dependinces</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="T:System.Linq.CachedQuery`1">
            <summary>
            This class implements the caching behavior of an IQueryable&lt;T&gt; interface.
            When first time enumerated it enumerates the IQueryable and returns the query result.
            It also copies the result into a list as is being enumerated and it adds it into
            the cache with the given caching key. Subsequent enumerations using the same 
            caching key will use the cached result.
            By setting up a SqlDependency on the CallContext, a Query Notification will be
            placed on the SQL Server for the query. This notificaiton will fire when the
            cached result becomes invalid.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:System.Linq.CachedQuery`1.SqlDependencyCookie">
            <summary>
            Magic cookie value used by SqlClient. Any SqlCommand.ExecuteXXX we call
            will check this cookie value in the CallContext.
            </summary>
        </member>
        <member name="F:System.Linq.CachedQuery`1.cacheSyncRoot">
            <summary>
            Cache access synchronization object
            </summary>
        </member>
        <member name="F:System.Linq.CachedQuery`1.cachedEntries">
            <summary>
            The results cache. Each type instantiation uses a distinct cache.
            Entries can be purges or individually removed.
            </summary>
        </member>
        <member name="M:System.Linq.CachedQuery`1.Purge">
            <summary>
            Purges all entries in the results cache for the type &lt;T&gt;
            This method is safe to call in a multithreaded environment.
            </summary>
        </member>
        <member name="M:System.Linq.CachedQuery`1.Remove(System.String)">
            <summary>
            Removes the entry with the given key from the result cache for the type &lt;T&gt;
            This method is safe to call in a multithreaded environment.
            </summary>
            <param name="cacheKey">The caching key specified in AsCached call</param>
        </member>
        <member name="M:System.Linq.CachedQuery`1.GetEnumerator">
            <summary>
            Enumerates the query result as an IEnumerator of Object type entries.
            First invocation runs the query and enumerates the returned rows.
            Subsequent invocations may return the result from cache, if still valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Linq.CachedQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Enumerates the query result as an IEnumerator of &lt;T&gt; type entries.
            First invocation runs the query and enumerates the returned rows.
            Subsequent invocations may return the result from cache, if still valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Linq.CachedQuery`1.Options">
            <summary>
            The caching options passed in to the IQueryable extension.
            </summary>
        </member>
        <member name="P:System.Linq.CachedQuery`1.Query">
            <summary>
            The original IQueryable query
            </summary>
        </member>
        <member name="P:System.Linq.CachedQuery`1.Key">
            <summary>
            The caching key
            </summary>
        </member>
        <member name="T:System.Web.Mvc.LocalizableWebViewPage`1">
            <summary>A transparent localizable class which represents the properties and methods that are needed in order to render a view that uses ASP.NET Razor syntax.</summary>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 13:34:48 GMT"/>
            <summary>A transparent localizable class which represents the properties and methods that are needed in order to render a view that uses ASP.NET Razor syntax.</summary>
            <typeparam name="TModel">The type of the view data model.</typeparam>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:41:18 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1._(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetString</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:54 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetString(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>Format</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 17:52:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.Format(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> and <c>GetString</c></para>
            	<para>Translates the given text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:49 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.__(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetHtml</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:45 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetHtml(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>FormatHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:00:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.FormatHtml(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> and <c>GetHtml</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:02:50 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.___(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:12:40 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.__q(System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))))+'"' to the current culture language. </para>
            	<para>The html will be kept as it is, while arguments will be automatically HTML Encoded</para>
            	<para>Usage: &lt;input type="submit" value=@__q("Save") /&gt;  -- Note the missing quotes!</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.___q(System.String,System.Object[])">
            <summary>
            	<para>Quotes the text as the xgettext cannot correctly extract values from attributes</para>
            	<para>Translates the given html applying '"'+HttpUtility.HtmlAttributeEncode(string.Format(html, htmlArguments))+'"' to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            	<para>Usage: &lt;div title=@___q("&lt; class='tip'&gt;There are {0} {1} in cart.&lt;/div&gt;", 3, "&lt;b&gt;Items&lt;/b&gt;")&gt;...  -- Note the missing quotes!</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetRaw(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:15:15 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.FormatRaw(System.String,System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>GetRaw</c></para>
            	<para>Translates the given html applying string.Format(html, htmlArguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="html">The html to be translated</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 03:55:43 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.___(System.String,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetRaw</c> and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The text to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:47:27 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetRaw(System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:47:17 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.FormatRaw(System.String,System.Func{System.Object,System.Object},System.Object[])">
            <summary>
            	<para>@Alias <c>___</c> (3 underscores) and <c>FormatRaw</c></para>
            	<para>Translates the given html applying string.Format(html, arguments) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="text">The html to be translated</param>
            <param name="arguments">The html arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted html as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 18:25:01 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1._s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralString</c> and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:22:32 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetPluralString(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>FormatPlural</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:24:55 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.FormatPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>_</c> (1 underscore) and <c>GetPluralString</c></para>
            	<para>Translates the given singular or plural text applying string.Format(text, arguments) to the current culture language. </para>
            	<para>The singular/plural text and argument values will be HTML Encoded when used in ASP.NET MVC</para>
            </summary>
            <param name="singular">The text to be translated when count is 1</param>
            <param name="plural">The text to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text will be used, otherwise the plural text</param>
            <param name="arguments">Custom arguments list to be passed to string.Format</param>
            <returns>The translated formatted text as string</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:25:23 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.__s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:28:20 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetPluralHtml(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>__</c> (2 underscores) and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:32:19 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.FormatHtmlPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralHtml</c> and <c>FormatHtmlPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))) to the current culture language. </para>
            	<para>The singular/plural HTML will be kept as it is, while arguments will be automatically HTML Encoded</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural text</param>
            <param name="arguments">The arguments to be applied as arguments.Select(a =&gt; HttpUtility.HtmlEncode(a))</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 19:33:25 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.___s(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments) to the current culture language. </para>
            	<para>Warning! Neither the html nor the htmlArguments will be encoded whatsoever</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:55:00 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetPluralRaw(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:55:00 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.FormatRawPlural(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural HTML applying string.Format(html, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singularHTML">The HTML to be translated when count is 1</param>
            <param name="pluralHTML">The HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular HTML will be used, otherwise the plural HTML</param>
            <param name="htmlArguments">The html arguments to be applied. Warning! The arguments will not be htmlEncoded!</param>
            <returns>The translated formatted HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:49:47 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.___s(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>GetPluralRaw</c> and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:09:53 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.GetPluralRaw(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>FormatRawPlural</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:12:07 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizableWebViewPage`1.FormatRawPlural(System.String,System.String,System.Int32,System.Func{System.Object,System.String},System.Object[])">
            <summary>
            	<para>@Alias <c>___s</c> (3 underscores and s) and <c>GetPluralRaw</c></para>
            	<para>Translates the given singular or plural text/html applying string.Format(count == 1 ? singular : plural, arguments.Select(a =&gt; escapeArgumentFunc(a))) to the current culture language. </para>
            	<para>For each argument the escape func will be called before applying the format</para>
            </summary>
            <param name="singular">The text/HTML to be translated when count is 1</param>
            <param name="plural">The text/HTML to be translated when count is NOT 1</param>
            <param name="count">If count is 1 the singular text/HTML will be used, otherwise the plural text</param>
            <param name="arguments">The text/HTML arguments to be applied. For each argument will apply the escape func!</param>
            <param name="escapeArgumentFunc">The func to be applied for each argument .i.e. <c>a =&gt; HttpUtility.HtmlAttributeEncode(a)</c></param>
            <returns>The translated formatted text/HTML as MvcHtmlString</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Nov 2011 20:13:54 GMT"/>
        </member>
        <member name="T:System.DnwExtensions">
            <summary>The DnwExtensions class</summary>
            <created author="laurentiu.macovei" date="Tue, 13 Dec 2011 18:28:04 GMT"/>
        </member>
        <member name="T:System.Reflection.Reflections">
            <summary>
            Utility methods for common reflection tasks.
            </summary>
            <url>http://kennethxu.blogspot.com/2009/05/strong-typed-high-performance_15.html</url>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetStaticInvoker``1(System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type 
            <typeparamref name="TDelegate"/> that can be used to call the 
            static method with given method <paramref name="name"/> from given
            <paramref name="type"/>. The method signature must be compatible
            the parameter and return type of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="type">
            The type to locate the compatible method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <seealso cref="M:System.Reflection.Reflections.GetStaticInvokerOrFail``1(System.Type,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetStaticInvokerOrFail``1(System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type 
            <typeparamref name="TDelegate"/> that can be used to call the 
            static method with given method <paramref name="name"/> from given
            <paramref name="type"/>. The method signature must be compatible with 
            the parameter and return type of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/>.
            </returns>
            <exception name="MissingMethodException">
            When there is no matching method found.
            </exception>
            <seealso cref="M:System.Reflection.Reflections.GetStaticInvoker``1(System.Type,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetInstanceInvoker``1(System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type 
            <typeparamref name="TDelegate"/> that can be used to call the 
            instance method with given method <paramref name="name"/> from given
            <paramref name="type"/>. The first parameter type of <c>TDelegate</c> 
            must be assignable to the given <paramref name="type"/>. The rest
            parameters and return type of <c>TDelegate</c> must be compatible with 
            the signature of the method.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvokerOrFail``1(System.Type,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvoker``1(System.Object,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetInstanceInvokerOrFail``1(System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type 
            <typeparamref name="TDelegate"/> that can be used to call the 
            instance method with given method <paramref name="name"/> from given
            <paramref name="type"/>. The first parameter type of <c>TDelegate</c> 
            must be assignable to the given <paramref name="type"/>. The rest
            parameters and return type of <c>TDelegate</c> must be compatible with 
            the signature of the method.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <exception name="MissingMethodException">
            When there is no matching method found.
            </exception>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvoker``1(System.Type,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvokerOrFail``1(System.Object,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetInstanceInvoker``1(System.Object,System.String)">
            <summary>
            Extension method to obtain a delegate of type 
            <typeparamref name="TDelegate"/> that can be used to call the 
            instance method with given method <paramref name="name"/> on specific
            <paramref name="obj">object</paramref>. The method signature must be 
            compatible with the signature of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="obj">
            The object instance to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvokerOrFail``1(System.Object,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvoker``1(System.Type,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetInstanceInvokerOrFail``1(System.Object,System.String)">
            <summary>
            Extension method to obtain a delegate of type 
            <typeparamref name="TDelegate"/> that can be used to call the 
            instance method with given method <paramref name="name"/> on specific
            <paramref name="obj">object</paramref>. The method signature must be 
            compatible with the signature of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="obj">
            The object instance to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <exception name="MissingMethodException">
            When there is no matching method found.
            </exception>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvokerOrFail``1(System.Type,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetInstanceInvoker``1(System.Object,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetNonVirtualInvoker``1(System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type specified by parameter
            <typeparamref name="TDelegate"/> that can be used to make non virtual
            call to instance method with given method <paramref name="name"/> on 
            given <paramref name="type"/>. The first parameter type of <c>TDelegate</c> 
            must be assignable to the given <paramref name="type"/>. The rest
            parameters and return type of <c>TDelegate</c> must be compatible with 
            the signature of the method.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvokerOrFail``1(System.Type,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvoker``1(System.Object,System.Type,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetNonVirtualInvokerOrFail``1(System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type specified by parameter
            <typeparamref name="TDelegate"/> that can be used to make non virtual
            call to instance method with given method <paramref name="name"/> on 
            given <paramref name="type"/>. The first parameter type of <c>TDelegate</c> 
            must be assignable to the given <paramref name="type"/>. The rest
            parameters and return type of <c>TDelegate</c> must be compatible with 
            the signature of the method.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/>.
            </returns>
            <exception name="MissingMethodException">
            When there is no matching method found.
            </exception>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvoker``1(System.Type,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvokerOrFail``1(System.Object,System.Type,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetNonVirtualInvoker``1(System.Object,System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type specified by parameter
            <typeparamref name="TDelegate"/> that can be used to make non virtual
            call on the specific <paramref name="obj">object</paramref> to the
            instance method of given <paramref name="name"/> defined in the given 
            <paramref name="type"/> or its ancestor. The method signature must be 
            compatible with the signature of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="obj">
            The object instance to invoke the method.
            </param>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvokerOrFail``1(System.Object,System.Type,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvoker``1(System.Type,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetNonVirtualInvokerOrFail``1(System.Object,System.Type,System.String)">
            <summary>
            Extension method to obtain a delegate of type specified by parameter
            <typeparamref name="TDelegate"/> that can be used to make non virtual
            call on the specific <paramref name="obj">object</paramref> to the
            instance method of given <paramref name="name"/> defined in the given 
            <paramref name="type"/> or its ancestor. The method signature must be 
            compatible with the signature of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="obj">
            The object instance to invoke the method.
            </param>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <exception name="MissingMethodException">
            When there is no matching method found.
            </exception>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvokerOrFail``1(System.Type,System.String)"/>
            <seealso cref="M:System.Reflection.Reflections.GetNonVirtualInvoker``1(System.Object,System.Type,System.String)"/>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetInvoker``1(System.Object,System.Type,System.String,System.Reflection.BindingFlags,System.Predicate{System.Reflection.MethodInfo})">
            <summary>
            This is a more general purpose method to obtain a delegate of type
            specified by parameter <typeparamref name="TDelegate"/> that can 
            be used to call on the specific <paramref name="obj">object</paramref> 
            to the method of given <paramref name="name"/> defined in the given 
            <paramref name="type"/> or its ancestor. The method signature must be 
            compatible with the signature of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="obj">
            The object instance to invoke the method or null for static methods
            and open instance methods.
            </param>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <param name="bindingAttr">
            A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that 
            specify how the search is conducted.  -or- Zero, to return null.
            </param>
            <param name="filter">
            The additional filter to include/exclude methods.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/> or null when
            no matching method if found.
            </returns>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.GetInvokerOrFail``1(System.Object,System.Type,System.String,System.Reflection.BindingFlags,System.Predicate{System.Reflection.MethodInfo},System.String)">
            <summary>
            This is a more general purpose method to obtain a delegate of type
            specified by parameter <typeparamref name="TDelegate"/> that can 
            be used to call on the specific <paramref name="obj">object</paramref> 
            to the method of given <paramref name="name"/> defined in the given 
            <paramref name="type"/> or its ancestor. The method signature must be 
            compatible with the signature of <typeparamref name="TDelegate"/>.
            </summary>
            <typeparam name="TDelegate">
            Type of a .Net delegate.
            </typeparam>
            <param name="obj">
            The object instance to invoke the method or null for static methods
            and open instance methods.
            </param>
            <param name="type">
            The type to find the method.
            </param>
            <param name="name">
            The name of the method.
            </param>
            <param name="bindingAttr">
            A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that 
            specify how the search is conducted.  -or- Zero, to return null.
            </param>
            <param name="filter">
            The additional filter to include/exclude methods.
            </param>
            <param name="filterMessage">
            The description of the additional filter criteria that will be
            included in the exception message when no matching method found.
            </param>
            <returns>
            A delegate of type <typeparamref name="TDelegate"/>.
            </returns>
            <exception name="MissingMethodException">
            When there is no matching method found.
            </exception>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.CreateDynamicMethod(System.Reflection.MethodInfo)">
            <summary>
            </summary>
            <param name="method"></param>
            <returns></returns>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.AssertIsDelegate(System.Type)">
            <summary>
            </summary>
            <param name="delegateType"></param>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="T:System.Reflection.Reflections.DelegateBuilder`1">
            <summary>The DelegateBuilder class</summary>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.DelegateBuilder`1.#ctor(System.Object,System.Type,System.String,System.Boolean)">
            <summary>Creates a new instance of DelegateBuilder</summary>
            <param name="targetObject"></param>
            <param name="targetType"></param>
            <param name="methodName"></param>
            <param name="failFast"></param>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.DelegateBuilder`1.#ctor(System.Type,System.String,System.Boolean,System.Boolean)">
            <summary>Creates a new instance of DelegateBuilder</summary>
            <param name="targetType"></param>
            <param name="methodName"></param>
            <param name="failFast"></param>
            <param name="isInstanceMethod"></param>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.DelegateBuilder`1.#ctor(System.Object,System.Type,System.String,System.Boolean,System.Reflection.BindingFlags)">
            <summary>Creates a new instance of DelegateBuilder</summary>
            <param name="targetObject"></param>
            <param name="targetType"></param>
            <param name="methodName"></param>
            <param name="failFast"></param>
            <param name="bindingAttr"></param>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.DelegateBuilder`1.CreateInvoker">
            <summary>
            </summary>
            <returns></returns>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.DelegateBuilder`1.CreateInvoker(System.Boolean)">
            <summary>
            </summary>
            <param name="nonVirtual"></param>
            <returns></returns>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.DelegateBuilder`1.GetMethod">
            <summary>
            </summary>
            <returns></returns>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="M:System.Reflection.Reflections.DelegateBuilder`1.BuildExceptionMessage">
            <summary>
            </summary>
            <returns></returns>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="P:System.Reflection.Reflections.DelegateBuilder`1.MethodFilter">
            <summary>Gets or sets the MethodFilter</summary>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="P:System.Reflection.Reflections.DelegateBuilder`1.MethodFilterMessage">
            <summary>Gets or sets the MethodFilterMessage</summary>
            <created author="Kenneth Xu" date="2009"/>
        </member>
        <member name="T:System.Web.Mvc.RouteInfo">
            <summary>The RouteInfo class</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:55 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.RouteInfo.#ctor(System.Uri,System.String)">
            <summary>Creates a new instance of RouteInfo</summary>
            <param name="uri"></param>
            <param name="applicationPath"></param>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:55 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.RouteInfo.RouteData">
            <summary>Gets the RouteData</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:55 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.RouteInfo.InternalHttpContext">
            <summary>The InternalHttpContext class</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:56 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.RouteInfo.InternalHttpContext.#ctor(System.Uri,System.String)">
            <summary>Creates a new instance of InternalHttpContext</summary>
            <param name="uri"></param>
            <param name="applicationPath"></param>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:56 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.RouteInfo.InternalHttpContext.Request">
            <summary>Gets the Request</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:56 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.RouteInfo.InternalRequestContext">
            <summary>The InternalRequestContext class</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:56 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.RouteInfo.InternalRequestContext.#ctor(System.Uri,System.String)">
            <summary>Creates a new instance of InternalRequestContext</summary>
            <param name="uri"></param>
            <param name="applicationPath"></param>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:56 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.RouteInfo.InternalRequestContext.AppRelativeCurrentExecutionFilePath">
            <summary>Gets the AppRelativeCurrentExecutionFilePath</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:56 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.RouteInfo.InternalRequestContext.PathInfo">
            <summary>Gets the PathInfo</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:25:56 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.UriExtensions">
            <summary>The UriExtensions class</summary>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:28:22 GMT"/>
            <summary>The UriExtensions class</summary>
            <created author="laurentiu.macovei" date="Fri, 30 Dec 2011 20:35:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.IsRouteMatch(System.Uri,System.String,System.String)">
            <summary>
            </summary>
            <param name="uri"></param>
            <param name="controllerName"></param>
            <param name="actionName"></param>
            <returns></returns>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:28:22 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.GetRouteParameterValue(System.Uri,System.String)">
            <summary>
            </summary>
            <param name="uri"></param>
            <param name="paramaterName"></param>
            <returns></returns>
            <created author="scott.schluer" date="Fri, 18 Nov 2011 14:28:22 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.CultureName(System.Web.Mvc.ViewContext)">
            <summary>Returns the current culture name picked from RouteData or CultureInfo.CurrentCulture</summary>
            <param name="viewContext">The view context to extend to</param>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 11:52:49 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.StaticContent(System.Web.Mvc.UrlHelper,System.String)">
            <summary>Returns a static url content (also known as cookiless url) if EnableStaticDomains appSetting is true and there are defined static domains, otherwise returns the given content path url</summary>
            <param name="url">The url helper to be extended</param>
            <param name="contentPath">The path of the static resource</param>
            <created author="laurentiu.macovei" date="Fri, 30 Dec 2011 20:35:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.StaticContent(System.String)">
            <summary>Returns a static url content (also known as cookiless url) if EnableStaticDomains appSetting is true and there are defined static domains, otherwise returns the given content path url</summary>
            <param name="contentPath">The path of the static resource</param>
            <created author="laurentiu.macovei" date="Fri, 30 Dec 2011 20:35:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.RegisterScripts(System.Web.Mvc.ViewContext,System.String[])">
            <summary>
            Concatenates the given scripts to viewContext.Controller.ViewBag.Scripts so the master layout will render them.
            <para>This way you can register scripts from partial views as well</para>
            </summary>
            <param name="viewContext">The viewContext to extend</param>
            <param name="scripts">The list of scripts to be concatenated.
            <para>Should not start nor end with with ';'</para>
            </param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 03 Jan 2012 19:16:33 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.GetRegisteredScripts(System.Web.Mvc.ViewContext)">
            <summary>Returns all the registered scripts</summary>
            <param name="viewContext">The view context to return string.Join(";", viewContext.Controller.ViewBag.Scripts)</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 03 Jan 2012 19:21:29 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.RegisterCss(System.Web.Mvc.ViewContext,System.String,System.String)">
            <summary>
            Concatenates the given scripts to viewContext.Controller.ViewBag.Scripts so the master layout will render them.
            <para>This way you can register scripts from partial views as well</para>
            </summary>
            <param name="viewContext">The viewContext to extend</param>
            <param name="cssUrl">The list of scripts to be concatenated.</param>
            <param name="media">Specify the media where this css applies. Defaults to all</param>
            <created author="laurentiu.macovei" date="Sun, 22 Jan 2012 13:42:12 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.UriExtensions.GetRegisteredCss(System.Web.Mvc.ViewContext)">
            <summary>Returns all the registered scripts</summary>
            <param name="viewContext">The view context to return the registered css links</param>
            <created author="laurentiu.macovei" date="Sun, 22 Jan 2012 13:42:12 GMT"/>
        </member>
        <member name="T:EnumExtensions">
            <summary>The EnumExtensions class</summary>
            <created author="laurentiu.macovei" date="Thu, 10 Mar 2011 01:08:46 GMT"/>
        </member>
        <member name="M:EnumExtensions.LoadOrInitializeCulture``1(System.Globalization.CultureInfo,System.Int32)">
            <summary>Loads or initializes the current UI culture</summary>
            <param name="culture">The culture info you are looking for</param>
            <param name="cultureInfoId">The cultureId to be retrieved</param>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:43 GMT"/>
        </member>
        <member name="M:EnumExtensions.GetNamesAndValues``2">
            <summary>Returns the EnumStorage&lt;EnumType, Culture&gt;.NamesAndValues</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:43 GMT"/>
        </member>
        <member name="M:EnumExtensions.GetNamesAndValuesDictionary``2">
            <summary>Returns the EnumStorage&lt;EnumType, Culture&gt;.NamesAndValuesDictionary</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:43 GMT"/>
        </member>
        <member name="M:EnumExtensions.ParseToEnumFlag(System.Type,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>Returns a flags enum from a list of values</summary>
            <param name="type">The type we want to parse the enum values from</param>
            <param name="source">The list of the values</param>
            <param name="formKey">The key found in the list of values to identify the values</param>
            <created author="laurentiu.macovei" date="Mon, 28 Mar 2011 22:39:38 GMT"/>
        </member>
        <member name="M:EnumExtensions.ToObjectJson``1(``0)">
            <summary>Converts the given enum to json</summary>
            <param name="enum"></param>
            <returns></returns>
            <created author="tudor.dumitriu" date="Sun, 27 Mar 2011 16:30:32 GMT"/>
        </member>
        <member name="M:EnumExtensions.GetEnumerator``1(``0)">
            <summary>Returns an IEnumerable with all the enum info for this enum type</summary>
            <param name="enumType">The enum value for which the type inference would work</param>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:42 GMT"/>
        </member>
        <member name="M:EnumExtensions.GetEnumInfo``1(``0)">
            <summary>Returns the EnumInfo for a particular enum value</summary>
            <param name="enum">The enum value to return the EnumInfo for</param>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:42 GMT"/>
        </member>
        <member name="M:EnumExtensions.AsHtmlString``1(``0)">
            <summary>Returns the localized value of the DisplayAttribute or DescriptionAttribute or the enum.ToString()</summary>
            <param name="enum">The enum for which to return </param>
            <remarks>
            You need to decorate your enum with attributes like these: 
            [Display(Description = "MyResourceName", ResourceType = typeof(MyResourceTypeName))] 
            or 
            [Description("My custom description text - not localizable")] 
             
            Please NOTE that the value is cached per culture info and enum value for faster subsequent access. 
            </remarks>
            <returns>Either string or HTMLString depending on how it was defined in the resource i.e. starting with HTML: or not</returns>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 18:03:42 GMT"/>
        </member>
        <member name="M:EnumExtensions.AsString``1(``0)">
            <summary>Returns the localized value of the DisplayAttribute or DescriptionAttribute or the enum.ToString()</summary>
            <param name="enum">The enum for which to return </param>
            <remarks>
            You need to decorate your enum with attributes like these: 
            [Display(Description = "MyResourceName", ResourceType = typeof(MyResourceTypeName))] 
            or 
            [Description("My custom description text - not localizable")] 
             
            Please NOTE that the value is cached per culture info and enum value for faster subsequent access. 
            </remarks>
            <created author="laurentiu.macovei" date="Thu, 10 Mar 2011 01:08:46 GMT"/>
        </member>
        <member name="T:EnumExtensions.EnumInfo`1">
            <summary>The EnumInfo class</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:43 GMT"/>
        </member>
        <member name="M:EnumExtensions.EnumInfo`1.#ctor(System.Globalization.CultureInfo,`0,System.Int64,System.String,System.String,System.Web.IHtmlString,System.Attribute[])">
            <summary>Creates a new instance of EnumInfo</summary>
            <param name="culture"></param>
            <param name="enum"></param>
            <param name="value"></param>
            <param name="name"></param>
            <param name="description"></param>
            <param name="htmlDescription"></param>
            <param name="attributes"></param>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:43 GMT"/>
        </member>
        <member name="P:EnumExtensions.EnumInfo`1.Culture">
            <summary>Gets the Culture</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:44 GMT"/>
        </member>
        <member name="P:EnumExtensions.EnumInfo`1.Enum">
            <summary>Gets the Enum</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:44 GMT"/>
        </member>
        <member name="P:EnumExtensions.EnumInfo`1.Value">
            <summary>Gets the Value</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:44 GMT"/>
        </member>
        <member name="P:EnumExtensions.EnumInfo`1.Name">
            <summary>Gets the Name</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:44 GMT"/>
        </member>
        <member name="P:EnumExtensions.EnumInfo`1.Description">
            <summary>Gets the Description</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:44 GMT"/>
        </member>
        <member name="P:EnumExtensions.EnumInfo`1.HtmlDescription">
            <summary>Gets the HtmlDescription</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:44 GMT"/>
        </member>
        <member name="P:EnumExtensions.EnumInfo`1.Attributes">
            <summary>Gets the Attributes</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:44 GMT"/>
        </member>
        <member name="T:EnumExtensions.EnumStorage`2">
            <summary>The EnumStorage class</summary>
            <created author="laurentiu.macovei" date="Thu, 10 Mar 2011 01:08:46 GMT"/>
        </member>
        <member name="M:EnumExtensions.EnumStorage`2.#cctor">
            <summary>Static constructor of EnumStorage</summary>
            <created author="laurentiu.macovei" date="Thu, 14 Apr 2011 05:35:45 GMT"/>
        </member>
        <member name="T:System.Web.Combined.LibConfig">
            <summary>The DesktopConfig class</summary>
            <created author="laurentiu.macovei" date="Tue, 09 Mar 2010 16:40:33 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.#cctor">
            <summary>Static constructor of DesktopConfig</summary>
            <created author="laurentiu.macovei" date="Tue, 09 Mar 2010 16:40:33 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.BitwiseAnd(System.Web.Combined.MinifierDebugMode,System.Web.Combined.MinifierDebugMode)">
            <summary>Returns the bitwise and operation between the value and bitwiseWith</summary>
            <param name="value"></param>
            <param name="bitwiseWith"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 26 Jun 2010 21:19:10 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.ShouldIncludeLibrary(System.Byte[],System.Int32)">
            <summary>
            </summary>
            <param name="word"></param>
            <param name="power"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 29 Jun 2010 22:22:44 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.AppendLibrary(System.Byte[]@,System.Int32)">
            <summary>
            </summary>
            <param name="word"></param>
            <param name="power"></param>
            <created author="laurentiu.macovei" date="Tue, 29 Jun 2010 22:22:44 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.InitializeRuntimeLibrariesScriptsAndCss">
            <summary>Initializes the runtime scripts, libraries and css</summary>
            <created author="laurentiu.macovei" date="Sat, 26 Jun 2010 21:20:04 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.ReplaceImagesUrl(System.String,System.String,System.String,System.Func{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Replaces images url with a relative url to the minified css url. 
            <para>The image is copied to the ImagesRoot folder</para>
            </summary>
            <param name="imgRootUrl"></param>
            <param name="rootImagesPath"></param>
            <param name="rootPath"></param>
            <param name="getNextIndex"></param>
            <param name="allImages"></param>
            <param name="path"></param>
            <param name="content"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 30 Dec 2011 20:35:04 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.EnsureFolder(System.String,System.Boolean)">
            <summary>Ensures that the given path exists and marks it hidden or not</summary>
            <param name="path"></param>
            <param name="hidden"></param>
            <created author="laurentiu.macovei" date="Sat, 26 Jun 2010 21:20:04 GMT"/>
        </member>
        <member name="M:System.Web.Combined.LibConfig.ClearFolder(System.String,System.Func{System.String,System.Boolean},System.Func{System.String,System.Boolean})">
            <summary>Clears the given path except files or folders</summary>
            <param name="path"></param>
            <param name="exceptFile"></param>
            <param name="exceptDir"></param>
            <created author="laurentiu.macovei" date="Sat, 26 Jun 2010 16:18:10 GMT"/>
        </member>
        <member name="T:System.Web.Combined.MinifierDebugMode">
            <summary>
            Specifies values of debugging js/css mode
            </summary>
        </member>
        <member name="T:System.Globalization.Localization">
            <summary>
            Holds all the information necessary to Localize the site into a single language.
            </summary>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:40 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.#ctor">
            <summary>Creates a new, empty, Localization</summary>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:41 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.#ctor(System.String)">
            <summary>Creates a new Localization, populated from a .po file at the supplied filePath</summary>
            <param name="filePath"></param>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:41 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new Localization, populated from a .po file at the supplied filePath.
            If requested, will also load comments from that file.
            </summary>
            <param name="filePath"></param>
            <param name="loadComments">If true, will populate comments so that this .po file can be saved again exactly as it was loaded.</param>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:41 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.LoadFromFile(System.String)">
            <summary>
            Add Localization messages from a .po file.
            Doesn't initialize the collection, so it can be called from
            a loop if needed.
            </summary>
            <param name="filepath"></param>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:42 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.LoadFromReader(System.IO.TextReader)">
            <summary>
            Add Localization messages from the specified TextReader 
            (which hopefully points at a .po file)
            Doesn't initialize the collection, so it can be called from
            a loop if needed.
            </summary>
            <param name="reader"></param>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:42 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.GetNodeType(System.String)">
            <summary>
            </summary>
            <param name="line"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:42 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.Unescape(System.String)">
            <summary>
            </summary>
            <param name="text"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:42 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.GetMessage(System.String)">
            <summary>
            Given a msgID, returns the associated msgStr.
            If msgID doesn't exist in this collection, returns msgID.
            If the associated msgStr is empty, returns msgID.
            </summary>
            <param name="msgID"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:42 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.GetMessageObject(System.String)">
            <summary>
            Given a msgID, returns the associated msgStr.
            If msgID doesn't exist in this collection, returns msgID.
            If the associated msgStr is empty, returns msgID.
            </summary>
            <param name="msgID"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:42 GMT"/>
        </member>
        <member name="M:System.Globalization.Localization.ToFile(System.String)">
            <summary>Writes the contents of this Localization to the specified .po file.</summary>
            <param name="filepath"></param>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:42 GMT"/>
        </member>
        <member name="P:System.Globalization.Localization.Messages">
            <summary>A list of translated messages</summary>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:41 GMT"/>
        </member>
        <member name="P:System.Globalization.Localization.MessagesByAutoID">
            <summary>
            Translated messages, indexed by a short, autogenerated ID.
            Used during .po editing to avoid needing to pass around giant string keys.
            </summary>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:41 GMT"/>
        </member>
        <member name="P:System.Globalization.Localization.LoadComments">
            <summary>
            Whether comment information should be loaded and stored in memory for this Localization.
            Generally only used if you plan to use this Localization object to edit and save to a .po file.
            </summary>
            <created author="laurentiu.macovei" date="Tue, 29 Nov 2011 12:58:41 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.Controllers.APIController">
            <summary>The HomeController class</summary>
            <created author="laurentiu.macovei" date="Tue, 08 Jun 2010 22:36:39 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.GetOriginalUrl">
            <summary>Returns the original redirected url</summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 27 Feb 2011 18:07:40 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.ProcessScriptLibrary(System.String,System.String,System.String,System.Text.EnhancedStringBuilder,System.Collections.Generic.List{System.String},System.Boolean,System.Byte[]@,System.Int32@,System.String)">
            <summary>
            Processes a script library recursive and only prints unincluded libraries
            </summary>
            <param name="rootUrl"></param><param name="root"></param><param name="libraryPath"></param><param name="sb"></param>
            <param name="loaded"></param><param name="isDependency"></param><param name="loadedWord"></param><param name="loadingPower"></param><returns></returns>
            <param name="language">Specifies the language</param>
            <created author="laurentiu.macovei" date="Tue, 22 Jun 2010 18:56:58 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.PrintJS(System.String,System.String,System.Text.EnhancedStringBuilder,System.String,System.Int32)">
            <summary>Prints js recursively</summary>
            <param name="rootUrl"></param>
            <param name="root"></param>
            <param name="sb"></param>
            <param name="path"></param>
            <param name="power"></param>
            <created author="laurentiu.macovei" date="Sun, 27 Feb 2011 18:07:41 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.ProcessCssLibrary(System.String,System.String,System.String,System.String,System.Text.EnhancedStringBuilder,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>Processes the given css library with all of its dependinces</summary>
            <param name="rootLibraries"></param><param name="rootLibrariesPath"></param><param name="libraryPath"></param>
            <param name="sb"></param><param name="loaded"></param><param name="isDependency"></param><param name="fileMustExist"></param>
            <param name="renderAsImportInDebugMode">Specify true to render as @import url() rather than &lt;link /&gt; tag</param>
            <param name="renderPreloadScripts"></param><param name="rootCssPath"></param><returns></returns>
            <param name="language">Specifies the language</param>
            <created author="laurentiu.macovei" date="Thu, 24 Jun 2010 13:35:49 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.CombineJS(System.String)">
            <summary>Combines the required javascript files and returns a single minified result including all the dependent libraries</summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 22 Jun 2010 15:31:47 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.CombineCSS(System.String)">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Thu, 24 Jun 2010 13:35:49 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.Index">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 08 Jun 2010 22:36:39 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.Controllers.APIController.Code">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 14 Jun 2010 16:15:58 GMT"/>
        </member>
        <member name="T:System.Linq.CachedQueryEventArgs">
            <summary>
            Represents the set of arguments passed to the invalidation event handler
            </summary>
        </member>
        <member name="P:System.Linq.CachedQueryEventArgs.NotificationEventArgs">
            <summary>
            The arguments passed to the SqlDependency change event 
            </summary>
        </member>
        <member name="P:System.Linq.CachedQueryEventArgs.CacheKey">
            <summary>
            The cache key of the invalidated entry
            </summary>
        </member>
        <member name="P:System.Linq.CachedQueryEventArgs.Tag">
            <summary>
            The Tag object passed in as CacheQueryOptions in the AsCached method call
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
            <summary>The CreditCardAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:51 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
            <summary>Creates a new instance of CreditCardAttribute</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:52 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor(System.String)">
            <summary>Creates a new instance of CreditCardAttribute</summary>
            <param name="errorMessage"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:52 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:52 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:52 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.ClientValidation.Adapters.DigitsAttributeAdapter">
            <summary>The DigitsAttributeAdapter class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.DigitsAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.DigitsAttribute)">
            <summary>Creates a new instance of DigitsAttributeAdapter</summary>
            <param name="metadata"></param>
            <param name="context"></param>
            <param name="attribute"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:04 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.DigitsAttributeAdapter.GetClientValidationRules">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:05 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.ClientValidation.Adapters.IntegerAttributeAdapter">
            <summary>The IntegerAttributeAdapter class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:05 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.IntegerAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.IntegerAttribute)">
            <summary>Creates a new instance of IntegerAttributeAdapter</summary>
            <param name="metadata"></param>
            <param name="context"></param>
            <param name="attribute"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:05 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.IntegerAttributeAdapter.GetClientValidationRules">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:05 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.LocalizedMvcRouteHandler">
            <summary>The LocalizedMvcRouteHandler class</summary>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 00:13:18 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizedMvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>Initializes the thread culture based on the current requested language</summary>
            <param name="requestContext"></param>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 00:13:18 GMT"/>
        </member>
        <member name="T:System.Text.Base32">
            <summary>The Base32 class</summary>
            <created author="laurentiu.macovei" date="Wed, 28 Dec 2011 00:35:43 GMT"/>
        </member>
        <member name="M:System.Text.Base32.ToBase32String(System.Byte[])">
            <summary>Converts an array of bytes to a Base32-k string.</summary>
            <created author="laurentiu.macovei" date="Wed, 28 Dec 2011 00:35:44 GMT"/>
        </member>
        <member name="M:System.Text.Base32.FromBase32String(System.String)">
            <summary>Converts a Base32-k string into an array of bytes.</summary>
            <exception cref="T:System.ArgumentException">
            Input string <paramref name="str">str</paramref>contains invalid Base32-k characters. 
            </exception>
            <created author="laurentiu.macovei" date="Wed, 28 Dec 2011 00:35:44 GMT"/>
        </member>
        <member name="T:System.Linq.Category">
            <summary>
            Extensions for IQueryable&lt;T&gt;
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Linq.Category.AsCached``1(System.Linq.IQueryable{``0},System.Boolean,System.Action{System.Linq.CachedQueryEventArgs},System.String,System.Linq.CachedQueryOptions)" -->
        <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
            <summary>The UrlAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:46 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
            <summary>Creates a new instance of UrlAttribute</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:46 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor(System.String)">
            <summary>Creates a new instance of UrlAttribute</summary>
            <param name="errorMessage"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:46 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor(System.Boolean)">
            <summary>Creates a new instance of UrlAttribute</summary>
            <param name="requireProtocol"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:46 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor(System.String,System.Boolean)">
            <summary>Creates a new instance of UrlAttribute</summary>
            <param name="errorMessage"></param>
            <param name="requireProtocol"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:47 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:47 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:47 GMT"/>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.UrlAttribute.Regex">
            <summary>Gets the Regex</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:51:47 GMT"/>
        </member>
        <member name="T:System.ExtendedMethods">
            <summary>The ExtendedMethods class</summary>
            <created author="laurentiu.macovei" date="Thu, 16 Jun 2011 15:09:44 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.js(System.String,System.Boolean)">
            <summary>Encodes a string and returns it  as MvcHtmlString.</summary>
            <param name="text">A string to encode.</param>
            <param name="addDoubleQuotes">
            A value that indicates whether double quotation marks will be included around 
            the encoded string. 
            </param>
            <returns>An encoded string.</returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 15:40:38 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Js(System.String,System.Boolean)">
            <summary>Encodes a string and returns it as String.</summary>
            <param name="text">A string to encode.</param>
            <param name="addDoubleQuotes">
            A value that indicates whether double quotation marks will be included around 
            the encoded string. 
            </param>
            <returns>An encoded string.</returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 15:40:38 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.SetValues``1(``0,System.Object)">
            <summary>Sets the properties of another dictionary or anonymous object into this dictionary</summary>
            <param name="dictionary">The dictionary to set the values into</param>
            <param name="anonymousObject">An anonymous object or IDictionary&lt;string,object&gt; to copy the properties from</param>
            <returns>The original dictionary updated</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 18:44:48 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.SetValues``1(``0,System.Object[])">
            <summary>Sets the properties of another dictionaries or anonymous objects into this dictionary</summary>
            <param name="dictionary">The dictionary to set the values into</param>
            <param name="anonymousObjects">Any anonymous objects or IDictionary&lt;string,object&gt; to copy the properties from</param>
            <returns>The original dictionary updated</returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 18:49:11 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.SetValues``1(``0,System.Boolean,System.Object)">
            <summary>Sets the properties of another dictionary or anonymous object into this dictionary</summary>
            <param name="dictionary">The dictionary to set the values into</param>
            <param name="htmlAttributes">Specify true in order to detect the css class properties and concatenate them</param>
            <param name="anonymousObject">An anonymous object or IDictionary&lt;string,object&gt; to copy the properties from</param>
            <returns>The original dictionary updated</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 02:35:09 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.SetValues``1(``0,System.Boolean,System.Object[])">
            <summary>Sets the properties of another dictionaries or anonymous objects into this dictionary</summary>
            <param name="dictionary">The dictionary to set the values into</param>
            <param name="htmlAttributes">The dictionary to get the values from</param>
            <param name="anonymousObjects">Any anonymous objects or IDictionary&lt;string,object&gt; to copy the properties from</param>
            <returns>The original dictionary updated</returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 02:35:09 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.GetSerializationFormat(System.String)">
            <summary>Returns the SerializationFormat enum value from its string representance</summary>
            <param name="_format">The format to serialize the results to. Known formats: json, jsonp, xml. The default format is json</param>
            <created author="laurentiu.macovei" date="Thu, 16 Jun 2011 22:19:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.In``1(``0,``0[])">
            <summary>Returns true if the provided value is contained in the given items</summary>
            <param name="value">The value to be searched</param>
            <param name="items">The items to search throguh</param>
            <created author="laurentiu.macovei" date="Fri, 08 Jul 2011 22:47:27 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.In``1(``0,System.Collections.Generic.IEqualityComparer{``0},``0[])">
            <summary>Returns true if the provided value is contained in the given items</summary>
            <param name="value">The value to be searched</param>
            <param name="items">The items to search throguh</param>
            <param name="comparer">An equality comparer to compare values.</param>
            <created author="laurentiu.macovei" date="Sat, 12 Nov 2011 20:22:14 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            </summary>
            <param name="list"></param>
            <param name="lookup"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 02:59:14 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Print(System.Exception)">
            <summary>Returns an exception message with all of inner exceptions</summary>
            <param name="exception">The exception to be printed out</param>
            <created author="laurentiu.macovei" date="Fri, 08 Jul 2011 23:32:04 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.GetInformationMessage(System.Boolean,System.String)">
            <summary>Returns the message with detailed information like OS, Platform, .NET Framework information</summary>
            <param name="success">Specify whether the operation was a success</param>
            <param name="message">The message to be returned</param>
            <returns>The message serialized as json in a stream</returns>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 16:05:23 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Concatenate``1(System.Collections.Generic.IEnumerable{``0[]})">
            <summary>
            </summary>
            <param name="lists"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 23:20:01 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToEnumerable``1(``0)">
            <summary>Encapsulates the given item as an IEnumerable&lt;T&gt;</summary>
            <param name="item">The item to be returned as an IEnumerable</param>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 23:20:01 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Concat``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>Concatenates the given source with the provided params</summary>
            <param name="source">The source to be concatenated from</param>
            <param name="items">The items to be concatenated to</param>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 23:20:02 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.SelfConcat``1(``0,``0[])">
            <summary>Concatenates an element to the given params</summary>
            <param name="item">The source item</param>
            <param name="items">The additional items to be concatenated</param>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 23:20:02 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.SelfConcat``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>Concatenates an element to the given items</summary>
            <param name="item">The source item</param>
            <param name="items">The additional items to be concatenated</param>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 23:20:02 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Concatenate``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Concatenates multiple list's elements into one single enumeration</summary>
            <param name="lists"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 25 Jul 2011 19:31:28 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJson(System.Web.Mvc.ModelStateDictionary)">
            <summary>Serializes the given model state in a json compatible dictionary</summary>
            <param name="modelState">The model state to be serialized</param>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJson(System.Web.Mvc.Controller,System.Object)">
            <summary>Serializes the object as json</summary>
            <param name="o"></param>
            <returns></returns>
            <param name="controller">The controller to be extended</param>
            <created author="laurentiu.macovei" date="Sat, 29 Jan 2011 19:01:03 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.LogException(System.Exception)">
            <summary>Logs an exception and returns it for eventually rethrow</summary>
            <param name="ex">The exception beeing logged</param>
            <returns>The exception beeing logged</returns>
            <created author="laurentiu.macovei" date="Sat, 12 Mar 2011 20:38:07 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.CatchException(System.Action,System.Action{System.Exception},System.Boolean)">
            <summary>Executes the action and if an error occurs will log it into the system with AppContext.LogException </summary>
            <param name="action">The action to be executed</param>
            <param name="logExceptionWhenThrown">This action will be executed when an exception was thrown so you can treat it</param>
            <param name="logToElmah">Specify whether any catched errors will be logged to ELMAH. Default to true</param>
            <created author="tudor.dumitriu" date="Thu, 05 May 2011 15:06:22 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.CatchException``1(System.Func{``0},System.Action{System.Exception},System.Boolean)">
            <summary>Executes the action and if an error occurs will log it into the system with AppContext.LogException </summary>
            <param name="action">The action to be executed</param>
            <param name="logExceptionWhenThrown">This action will be executed when an exception was thrown so you can treat it</param>
            <param name="logToElmah">Specify whether any catched errors will be logged to ELMAH. Default to true</param>
            <created author="gabriel.pagu" date="Mon, 04 Apr 2011 21:52:52 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.CatchException``1(System.Func{``0},System.Func{System.Exception,``0},System.Boolean)">
            <summary>Executes the action and if an error occurs will log it into the system with AppContext.LogException </summary>
            <param name="action">The action to be executed</param>
            <param name="logExceptionWhenThrown">This action will be executed when an exception was thrown so you can treat it</param>
            <param name="logToElmah">Specify whether any catched errors will be logged to ELMAH. Default to true</param>
            <created author="gabriel.pagu" date="Mon, 04 Apr 2011 21:52:52 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ApologizeErrorMessage">
            <summary>Returns a localized message like: An error has occured. We have been notified and we will fix it shortly. Thank you for your patience!</summary>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 11:14:46 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Split(System.String,System.StringSplitOptions,System.Char[])">
            <summary>Returns a string array that contains the substrings in this string that are delimited by elements of a specified Unicode character array. A parameter specifies whether to return empty array elements.</summary>
            <param name="value">The string value to be split</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit empty array elements from the array returned, or System.StringSplitOptions.None to include empty array elements in the array returned.</param>
            <param name="separators">An array of Unicode characters that delimit the substrings in this string, an empty array that contains no delimiters, or null.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:51:23 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Split(System.String,System.Char,System.StringSplitOptions)">
            <summary>Returns a string array that contains the substrings in this string that are delimited by elements of a specified Unicode character. A parameter specifies whether to return empty array elements.</summary>
            <param name="value">The string value to be split</param>
            <param name="separator">An Unicode character that delimit the substrings in this string</param>
            <param name="options">Specify System.StringSplitOptions.RemoveEmptyEntries to omit empty array elements from the array returned, or System.StringSplitOptions.None to include empty array elements in the array returned.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:51:23 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Split(System.String,System.Char,System.Int32)">
            <summary>Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character. A parameter specifies the maximum number of substrings to return.</summary>
            <param name="value">The string value to be split</param>
            <param name="separator">An Unicode character that delimit the substrings in this string</param>
            <param name="count">The maximum number of substrings to return.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:56:28 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.Split(System.String,System.Int32,System.Char[])">
            <summary>Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character array. A parameter specifies the maximum number of substrings to return.</summary>
            <param name="value">The string value to be split</param>
            <param name="separators">An array of Unicode characters that delimit the substrings in this string, an empty array that contains no delimiters, or null.</param>
            <param name="count">The maximum number of substrings to return.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 20 Mar 2010 16:56:28 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.BeginKnockout(System.Web.Mvc.HtmlHelper,System.String,System.Object[])">
            <summary>Starts a zone where EditorFor will automatically generate data-bind attributes</summary>
            <param name="html"></param>
            <param name="htmlAttributes">Any anonymous objects / dictionary with attributes to be added on the provided tag</param>
            <param name="tag">Specify any tag to be rendered out. Specify null for no tag to be written out</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 02:35:09 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.EndKnockout(System.Web.Mvc.HtmlHelper)">
            <summary>Ends a zone where EditorFor will automatically generate data-bind attributes</summary>
            <param name="html"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 22:13:56 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.CanOutputKnockout(System.Web.Mvc.ControllerBase)">
            <summary>
            Returns true if called in a context where BeginKnockout was called
            thus if true EditorFor will automatically generate data-bind attributes
            </summary>
            <param name="controller"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 02:35:09 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.IsTrue(System.String,System.Boolean)">
            <summary>Returns true if the value is 1 or true, or default value if null or string.Empty, otherwise false</summary>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 24 Jul 2007 16:33:34 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJavascriptDateNumber(System.DateTime,System.Boolean)">
            <summary>Returns the number used by javascript to build a date<para>(date - 1970/1/1).TotalMiliseconds</para></summary>
            <param name="date">The date to be converted</param>
            <param name="convertToUtc">Specify whether the date should be converted to UTC (defaults to true)</param>
            <created author="laurentiu.macovei" date="Thu, 09 Feb 2012 15:28:46 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToUniversalTicks(System.DateTime,System.TimeSpan)">
            <summary>
            </summary>
            <param name="dateTime"></param>
            <param name="offset"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:26:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ConvertDateTimeToJavaScriptTicks(System.DateTime,System.TimeSpan)">
            <summary>
            </summary>
            <param name="dateTime"></param>
            <param name="offset"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:26:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ConvertDateTimeToJavaScriptTicks(System.DateTime)">
            <summary>
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:26:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ConvertJavaScriptTicksToDateTime(System.Int64)">
            <summary>Converts the number meaning javascriptTicks to DateTime</summary>
            <param name="javaScriptTicks">The ticks to be converted</param>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:32:51 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ConvertDateTimeToJavaScriptTicks(System.DateTime,System.Boolean)">
            <summary>
            </summary>
            <param name="dateTime"></param>
            <param name="convertToUtc"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:26:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToUniversalTicks(System.DateTime)">
            <summary>
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:26:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.UniversialTicksToJavaScriptTicks(System.Int64)">
            <summary>
            </summary>
            <param name="universialTicks"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:26:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.GetUtcOffset(System.DateTime)">
            <summary>
            </summary>
            <param name="d"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:26:47 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.SetAuthCookie(System.Web.HttpResponse,System.String,System.Boolean,System.String)">
            <summary>
            </summary>
            <param name="response"></param>
            <param name="name"></param>
            <param name="rememberMe"></param>
            <param name="UserData"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 25 Jan 2012 22:13:56 GMT"/>
        </member>
        <member name="F:System.ExtendedMethods.EnableReCapthca">
            <summary>Retrieves the configured value for EnableReCapthca -&gt;AppSettings["reCaptcha:enable"]</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:23:51 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.FormatWith(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            </summary>
            <param name="format"></param>
            <param name="provider"></param>
            <param name="args"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:32:52 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.FormatWith(System.String,System.Object[])">
            <summary>
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:32:53 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJson(System.Object)">
            <summary>Serializes the specified object to a JSON string.</summary>
            <param name="value">The object to serialize.</param>
            <returns>A JSON string representation of the object.</returns>
            <created author="laurentiu.macovei" date="Thu, 09 Feb 2012 18:30:19 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJson(System.Object,Newtonsoft.Json.Formatting)">
            <summary>Serializes the specified object to a JSON string.</summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>A JSON string representation of the object.</returns>
            <created author="laurentiu.macovei" date="Thu, 09 Feb 2012 18:30:20 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJson(System.Object,Newtonsoft.Json.JsonConverter[])">
            <summary>Serializes the specified object to a JSON string using a collection of Newtonsoft.Json.JsonConverter.</summary>
            <param name="value">The object to serialize.</param>
            <param name="converters">A collection converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
            <created author="laurentiu.macovei" date="Thu, 09 Feb 2012 18:30:20 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJson(System.Object,Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>Serializes the specified object to a JSON string using a collection of Newtonsoft.Json.JsonConverter.</summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="settings">
            The Newtonsoft.Json.JsonSerializerSettings used to serialize the object. 
            If this is null, default serialization settings will be is used. 
            </param>
            <returns>A JSON string representation of the object.</returns>
            <created author="laurentiu.macovei" date="Thu, 09 Feb 2012 18:30:20 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.ToJson(System.Object,Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonConverter[])">
            <summary>Serializes the specified object to a JSON string using a collection of Newtonsoft.Json.JsonConverter.</summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="converters">A collection converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
            <created author="laurentiu.macovei" date="Thu, 09 Feb 2012 18:30:20 GMT"/>
        </member>
        <member name="T:System.ExtendedMethods.StructEqualityComparer`2">
            <summary>The StructEqualityComparer class</summary>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 02:59:17 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.StructEqualityComparer`2.#ctor(System.Func{`0,`1})">
            <summary>Creates a new instance of StructEqualityComparer</summary>
            <param name="lookup"></param>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 02:59:17 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.StructEqualityComparer`2.Equals(`0,`0)">
            <summary>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 02:59:17 GMT"/>
        </member>
        <member name="M:System.ExtendedMethods.StructEqualityComparer`2.GetHashCode(`0)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 02:59:18 GMT"/>
        </member>
        <member name="T:System.JavaScriptDateTimeConverterWithoutDatePrefix">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to and from a JavaScript date constructor (e.g. new Date(52231943)).
            </summary>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:32:53 GMT"/>
        </member>
        <member name="M:System.JavaScriptDateTimeConverterWithoutDatePrefix.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Reads the JSON representation of the object.</summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/>to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:32:53 GMT"/>
        </member>
        <member name="M:System.JavaScriptDateTimeConverterWithoutDatePrefix.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Writes the JSON representation of the object.</summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/>to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
            <created author="laurentiu.macovei" date="Mon, 13 Feb 2012 17:32:53 GMT"/>
        </member>
        <member name="T:System.KnockoutZone">
            <summary>The KnockoutZone class</summary>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 02:35:10 GMT"/>
        </member>
        <member name="M:System.KnockoutZone.#ctor(System.Web.Mvc.HtmlHelper,System.Web.Mvc.ControllerBase,System.String,System.Object[])">
            <summary>Creates a new instance of KnockoutZone</summary>
            <param name="controller"></param>
            <param name="htmlAttributes"></param>
            <param name="htmlHelper"></param>
            <param name="tag"></param>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 02:35:10 GMT"/>
        </member>
        <member name="M:System.KnockoutZone.Dispose">
            <summary>Closes the Knockout zone</summary>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 02:35:10 GMT"/>
        </member>
        <member name="T:SectionExtensions">
            <summary>The SectionExtensions class</summary>
            <remarks>http://blogs.msdn.com/b/marcinon/archive/2010/12/08/optional-razor-sections-with-default-content.aspx</remarks>
            <seealso>http://blogs.msdn.com/b/marcinon/archive/2010/12/15/razor-nested-layouts-and-redefined-sections.aspx</seealso>
            <created author="laurentiu.macovei" date="Sat, 08 Jan 2011 23:22:45 GMT"/>
        </member>
        <member name="M:SectionExtensions.GetPreviousWriters(System.Web.WebPages.WebPageBase)">
            <summary>
            </summary>
            <param name="page"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.GetSectionWritersStack(System.Web.WebPages.WebPageBase)">
            <summary>
            </summary>
            <param name="page"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.TypeAllowsNullValue(System.Type)">
            <summary>Returns whether the given type allows null value</summary>
            <param name="type"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 23:44:08 GMT"/>
        </member>
        <member name="M:SectionExtensions.Append(System.IO.TextWriter,System.Object)">
            <summary>
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 02:56:31 GMT"/>
        </member>
        <member name="M:SectionExtensions.RadioButtonsFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Func{``1,System.Boolean},System.Web.Mvc.LabelPostion,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Object,System.Nullable{System.Int32},System.String,System.Object,System.Object,System.Boolean,System.Action{System.Int32,``1,System.IO.TextWriter},System.Int32)">
            <summary>Renders radio buttons for all (filtered) values of a given Enum</summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression"></param>
            <param name="beginTag">The tag to render the options in. i.e. "ul" to render the questions in an &lt;ul&gt; tag. Defaults to "ul"</param>
            <param name="itemTag">The tag to render each option in. i.e. "li" to render each question in a &lt;li&gt; tag</param>
            <param name="separator">The separator text to be rendered between two options. Defaults to "&amp;nbsp;" (a visible whitespace)</param>
            <param name="filterEnums">A func to filter which enum values to be rendered. Return false to exclude those you don't want</param>
            <param name="labelPosition">Where to render the label text. Select None so no label will be rendered at all</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for each radio button element.</param>
            <param name="renderRadioButtons">Specify false if you don't want the radio buttons to be rendered i.e. you need only the labels. Defaults to true</param>
            <param name="labelsAsText">Specify false means that lables text will be rendered within a &lt;label for="model"&gt; tag. Specify true if you need a simple text. Defaults to false</param>
            <param name="labelAttributes">Specify custom attributes to the label of each of the rendered items</param>
            <param name="itemAttributes">An object that contains the HTML attributes to set for each item element i.e. li.</param>
            <param name="skipValues">How many items to be skipped. Defaults to 1 i.e. NotSet value</param>
            <param name="beginTagAttributes">Custom html attributes when beginTag is specified</param>
            <param name="itemsPerRow">Specify how many items per row should be displayed. Defaults to null, which means no rows will be created. If beginTag is div it will be replaced as table and if itemTag is null it will be replaced as td. RowTag already defaults to tr.</param>
            <param name="itemAction">A custom action that is executed before each item is rendered. Parameters are: index, value, writer</param>
            <param name="printLegend">Specify whether to print a &lt;legend&gt; tag after the beginTag. Useful when rendering beginTag as fieldset</param>
            <param name="rowTag">Specify the tag to be used then itemsPerRow is provided, hence rendering on multiple rows. Defaults to tr</param>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 19:54:13 GMT"/>
        </member>
        <member name="M:SectionExtensions.CheckBoxesFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Func{``1,System.Boolean},System.Web.Mvc.LabelPostion,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Object,System.Nullable{System.Int32},System.String,System.Object,System.Object,System.Boolean,System.Action{System.Int32,``1,System.IO.TextWriter},System.Int32)">
            <summary>Renders radio buttons for all (filtered) values of a given Enum</summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression"></param>
            <param name="beginTag">The tag to render the options in. i.e. "ul" to render the questions in an &lt;ul&gt; tag. Defaults to "ul"</param>
            <param name="itemTag">The tag to render each option in. i.e. "li" to render each question in a &lt;li&gt; tag</param>
            <param name="separator">The separator text to be rendered between two options. Defaults to "&amp;nbsp" (a visible whitespace)</param>
            <param name="filterEnums">A func to filter which enum values to be rendered. Return false to exclude those you don't want</param>
            <param name="labelPosition">Where to render the label text. Select None so no label will be rendered at all</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for each radio button element.</param>
            <param name="itemAttributes">An object that contains the HTML attributes to set for each item element i.e. li.</param>
            <param name="renderCheckBoxes">Specify false if you don't want the check buttons to be rendered i.e. you need only the labels. Defaults to true</param>
            <param name="skipValues">How many items to be skipped. Defaults to 1 i.e. NotSet value</param>
            <param name="printLegend">Specify whether to print a &lt;legend&gt; tag after the beginTag. Useful when rendering beginTag as fieldset</param>
            <param name="itemAction">A custom action that is executed before each item is rendered. Parameters are: index, value, writer</param>
            <param name="rowTag">Specify the tag to be used then itemsPerRow is provided, hence rendering on multiple rows. Defaults to tr</param>
            <param name="beginTagAttributes">Custom html attributes when beginTag is specified</param>
            <param name="labelsAsText">Specify false means that lables text will be rendered within a &lt;label for="model"&gt; tag. Specify true if you need a simple text. Defaults to false</param>
            <param name="labelAttributes">Specify custom attributes to the label of each of the rendered items</param>
            <param name="itemsPerRow">Specify how many items per row should be displayed. Defaults to null, which means no rows will be created. If beginTag is div it will be replaced as table and if itemTag is null it will be replaced as td. RowTag already defaults to tr.</param>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 19:54:13 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderEnum``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{System.Web.Mvc.HtmlHelper,System.Web.Mvc.ModelMetadata,System.String,System.String},System.Action{System.Web.Mvc.HtmlHelper,System.Int32,System.String,System.String,``1,``1,System.Collections.Generic.IDictionary{System.String,System.Object},System.IO.TextWriter},System.Object,System.Func{``1,System.Boolean},System.Web.Mvc.LabelPostion,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Object,System.Nullable{System.Int32},System.String,System.Object,System.Object,System.Boolean,System.Action{System.Int32,``1,System.IO.TextWriter},System.Int32)">
            <summary>
            </summary>
            <param name="htmlHelper"></param>
            <param name="expression"></param>
            <param name="buildHtmlFieldName"></param>
            <param name="itemRenderer"></param>
            <param name="htmlAttributes"></param>
            <param name="filterEnums"></param>
            <param name="labelPositon"></param>
            <param name="separator"></param>
            <param name="beginTag"></param>
            <param name="itemTag"></param>
            <param name="renderRadioButtons"></param>
            <param name="labelsAsText"></param>
            <param name="labelAttributes"></param>
            <param name="itemsPerRow"></param>
            <param name="rowTag"></param>
            <param name="beginTagAttributes"></param>
            <param name="itemAttributes"></param>
            <param name="printLegend"></param>
            <param name="itemAction"></param>
            <param name="skipValues"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 02:56:31 GMT"/>
        </member>
        <member name="M:SectionExtensions.GetAsHtmlStringMethod(System.Type)">
            <summary>
            </summary>
            <param name="itemType"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 02:56:31 GMT"/>
        </member>
        <member name="M:SectionExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Func{``1,System.Boolean},System.String,System.Int32)">
            <summary>Renders a DropDownList for all (filtered) values of a given Enum</summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression"></param>
            <param name="filterEnums">A func to filter which enum values to be rendered. Return false to exclude those you don't want</param>
            <param name="optionLabel">The default text i.e. (Select an option)</param>
            <param name="skipCount">Specify how many values from the enum to skip. By default 1 to skip the NotSet. Specify 0 to render all</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for each radio button element.</param>
            <created author="laurentiu.macovei" date="Tue, 22 Mar 2011 17:46:52 GMT"/>
        </member>
        <member name="M:SectionExtensions.SelectInternal(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            </summary>
            <param name="htmlHelper"></param>
            <param name="optionLabel">The default text i.e. (Select an option)</param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="allowMultiple"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 14:36:02 GMT"/>
        </member>
        <member name="M:SectionExtensions.GetSelectData(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            </summary>
            <param name="htmlHelper"></param>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 14:36:02 GMT"/>
        </member>
        <member name="M:SectionExtensions.ToMvcHtmlString(System.Web.Mvc.TagBuilder,System.Web.Mvc.TagRenderMode)">
            <summary>
            </summary>
            <param name="tagBuilder"></param>
            <param name="renderMode"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 14:36:03 GMT"/>
        </member>
        <member name="M:SectionExtensions.GetModelStateValue(System.Web.Mvc.HtmlHelper,System.String,System.Type)">
            <summary>
            </summary>
            <param name="htmlHelper"></param>
            <param name="key"></param>
            <param name="destinationType"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 14:36:03 GMT"/>
        </member>
        <member name="M:SectionExtensions.ListItemToOption(System.Web.Mvc.SelectListItem)">
            <summary>
            </summary>
            <param name="item"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 14:36:03 GMT"/>
        </member>
        <member name="M:SectionExtensions.Label``1(System.Web.Mvc.HtmlHelper{``0},System.String,System.String,System.Object,System.Boolean,System.String,System.String)">
            <summary>
            Returns an HTML label element and the property name of the property that
            is represented by the specified expression.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the property to display.</param>
            <param name="labelText">Optional custom label text.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="html">Specify true if the label text contains html</param>
            <param name="requiredLabelHtml">Specify a custom html if the property is required to draw a hint i.e. an *. <para>Defaults to &lt;em class="formee-req"&gt;*&lt;/em&gt;</para></param>
            <param name="tagName">Specify the tag name to be printed out i.e. label</param>
            <returns>An HTML label element and the property name of the property that is represented by the expression.</returns>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 18:20:34 GMT"/>
        </member>
        <member name="M:SectionExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.Boolean,System.String,System.String)">
            <returns>An HTML label element and the property name of the property that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the property to display.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the value.</typeparam>
            <param name="labelText">Optional custom label text.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="html">Specify true whether the text of the label contains html</param>
            <param name="tagName">Specify the tag name to be printed out i.e. label</param>
            <param name="requiredLabelHtml">Specify a custom html if the property is required to draw a hint i.e. an *. <para>Defaults to &lt;em class="formee-req"&gt;*&lt;/em&gt;</para></param>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 06:20:01 GMT"/>
        </member>
        <member name="M:SectionExtensions.LabelForr``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.Boolean,System.String,System.String)">
            <returns>An HTML label element and the property name of the property that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the property to display.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the value.</typeparam>
            <param name="labelText">Optional custom label text.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="html">Specify true whether the text of the label contains html</param>
            <param name="requiredLabelHtml">Specify a custom html if the property is required to draw a hint i.e. an *. <para>Defaults to &lt;em class="formee-req"&gt;*&lt;/em&gt;</para></param>
            <param name="tagName">Specify the tag name to be printed out i.e. label</param>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 06:20:01 GMT"/>
        </member>
        <member name="M:SectionExtensions.LabelHelper(System.Web.Mvc.HtmlHelper,System.Web.Mvc.ModelMetadata,System.String,System.String,System.Object,System.Boolean,System.String,System.String)">
            <returns>An HTML label element and the property name of the property that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="metadata"></param>
            <param name="htmlFieldName">The name of the field</param>
            <param name="labelText">Optional custom label text.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="requiredLabelText">Specify a custom text if the property is required to draw a hint i.e. an *. <para>Defaults to &lt;em class="formee-req"&gt;*&lt;/em&gt;</para></param>
            <param name="tagName">Specify the tag name to be printed out i.e. label</param>
            <param name="html">Specify true whether the text of the label contains html</param>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 06:20:01 GMT"/>
        </member>
        <member name="M:SectionExtensions.ToJson(System.Web.Mvc.ModelStateDictionary)">
            <summary>Serializes the given model state in a json compatible dictionary</summary>
            <param name="modelState">The model state to be serialized</param>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.IsLogged(System.Security.Principal.IPrincipal)">
            <summary>Returns true if the current user is logged in</summary>
            <param name="user"></param>
            <created author="laurentiu.macovei" date="Sat, 12 Mar 2011 18:28:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.NotLogged(System.Security.Principal.IPrincipal)">
            <summary>Returns true if the current user is NOT logged in</summary>
            <param name="user"></param>
            <created author="laurentiu.macovei" date="Sat, 12 Mar 2011 18:28:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.ToJson(System.Web.Mvc.Controller,System.Object)">
            <summary>Serializes the object as json</summary>
            <param name="controller">The controller being extended</param>
            <param name="o"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 29 Jan 2011 19:01:03 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Renders the section with some new default content</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 09 Jan 2011 21:37:57 GMT"/>
        </member>
        <member name="M:SectionExtensions.DefaultSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult},SectionExtensions.DependentSection[])">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <param name="dependinces"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult},SectionExtensions.DependentSection[])">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <param name="dependinces"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.String)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 11 Mar 2011 21:47:47 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderSection(System.Web.WebPages.WebPageBase,System.String,System.Web.Mvc.MvcHtmlString)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 11 Mar 2011 21:59:50 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderSectionAsHtml(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult},SectionExtensions.DependentSection[])">
            <summary>Returns the MvcHtmlString of the given section if defined or the fallback default value</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <param name="dependinces"></param>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 02:55:35 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderSectionAsHtml(System.Web.WebPages.WebPageBase,System.String,System.String)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 02:55:35 GMT"/>
        </member>
        <member name="M:SectionExtensions.RenderSectionAsHtml(System.Web.WebPages.WebPageBase,System.String,System.Web.Mvc.MvcHtmlString)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 20 Mar 2011 02:55:35 GMT"/>
        </member>
        <member name="M:SectionExtensions.RedefineSection(System.Web.WebPages.WebPageBase,System.String)">
            <summary>Redefines a section and keeps the old default content</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 09 Jan 2011 21:37:57 GMT"/>
        </member>
        <member name="M:SectionExtensions.RedefineSection(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Redefines a section with some new "default content"</summary>
            <param name="page"></param>
            <param name="sectionName"></param>
            <param name="defaultContent"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 09 Jan 2011 21:37:58 GMT"/>
        </member>
        <member name="M:SectionExtensions.PurgeSections(System.Web.WebPages.WebPageBase,System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="sections"></param>
            <param name="onlyChildSections"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:32 GMT"/>
        </member>
        <member name="M:SectionExtensions.DaySuffix(System.DateTime,System.Boolean)">
            <summary>Returns the suffix for the day of the current date i.e. st, nd, rd, or th</summary>
            <param name="date">Specify the date to print the suffix for its day</param>
            <param name="printNumber">Specify true to return the day and then the suffix</param>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 14:36:04 GMT"/>
        </member>
        <member name="M:SectionExtensions.Suffix(System.Int32,System.Boolean)">
            <summary>Returns the suffix for the given number i.e. st, nd, rd, or th</summary>
            <param name="number">Specify the number to return its suffix for</param>
            <param name="printNumber">Specify true to return the day and then the suffix</param>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 14:39:53 GMT"/>
        </member>
        <member name="M:SectionExtensions.RedefineSections(System.Web.WebPages.WebPageBase,System.String,System.String)">
            <summary>Redefines all the previous defined sections</summary>
            <param name="page"></param>
            <param name="includeSections">Specify which sections to be redefined. If null provided, all of them will be redefined</param>
            <param name="exceptSections">Specify which sections not to be redefined</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sat, 12 Mar 2011 01:25:40 GMT"/>
        </member>
        <member name="M:SectionExtensions.Role(System.Web.WebPages.WebPageBase,System.String,System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Renders the content if the current logged in user is in any provided roles (separated by comma)</summary>
            <param name="page"></param>
            <param name="roles"></param>
            <param name="content"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Thu, 13 Jan 2011 17:31:46 GMT"/>
        </member>
        <member name="M:SectionExtensions.Logged(System.Web.WebPages.WebPageBase,System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Renders the content if there is a current logged in user</summary>
            <param name="page"></param>
            <param name="content"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Thu, 13 Jan 2011 17:31:46 GMT"/>
        </member>
        <member name="M:SectionExtensions.IsInRole(System.Security.Principal.IPrincipal,System.String[])">
            <summary>Determines whether the current principal belongs to any of the specified roles.</summary>
            <param name="user">The user to check the roles for</param>
            <param name="roles">The role names for which to check membership.</param>
            <returns>true if the current principal is a member of the specified role; otherwise, false.</returns>
            <created author="laurentiu.macovei" date="Sat, 29 Jan 2011 16:51:19 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextAreaForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression.</summary>
            <returns>An HTML textarea element for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <exception cref="T:System.ArgumentNullException">The <paramref name="expression"/> parameter is null.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:41:28 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextAreaForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes.</summary>
            <returns>An HTML textarea element for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <exception cref="T:System.ArgumentNullException">The <paramref name="expression"/> parameter is null.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:41:28 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextAreaForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes.</summary>
            <returns>An HTML textarea element for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <exception cref="T:System.ArgumentNullException">The <paramref name="expression"/> parameter is null.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:46:08 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextAreaForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes and the number of rows and columns.</summary>
            <returns>An HTML textarea element for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <param name="rows">The number of rows.</param>
            <param name="columns">The number of columns.</param>
            <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <exception cref="T:System.ArgumentNullException">The <paramref name="expression"/> parameter is null.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:41:28 GMT"/>
        </member>
        <member name="M:SectionExtensions.GetRowsAndColumnsDictionary(System.Int32,System.Int32)">
            <summary>Returns a new dictionary containing the rows and columns</summary>
            <param name="rows">The rows to be contained</param>
            <param name="columns">The columns to be contained</param>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:41:28 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextAreaForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
            <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes and the number of rows and columns.</summary>
            <returns>An HTML textarea element for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <param name="rows">The number of rows.</param>
            <param name="columns">The number of columns.</param>
            <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <exception cref="T:System.ArgumentNullException">The <paramref name="expression"/> parameter is null.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:41:28 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextAreaHelperHtml(System.Web.Mvc.HtmlHelper,System.Web.Mvc.ModelMetadata,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a new text area but not encodes the html
            </summary>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="modelMetadata"></param>
            <param name="name"></param>
            <param name="rowsAndColumns">The dictionary with rows and columns</param>
            <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:41:28 GMT"/>
        </member>
        <member name="M:SectionExtensions.#cctor">
            <summary>Static constructor of SectionExtensions</summary>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 00:41:24 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextBoxForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>Returns a text input element for each property in the object that is represented by the specified expression.</summary>
            <returns>An HTML input element whose type attribute is set to "text" for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the value.</typeparam>
            <exception cref="T:System.ArgumentException">The <paramref name="expression"/> parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 02:16:48 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextBoxForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Returns a text input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
            <returns>An HTML input element type attribute is set to "text" for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the value.</typeparam>
            <exception cref="T:System.ArgumentException">The <paramref name="expression"/> parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 02:16:48 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextBoxForHtml``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>Returns a text input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
            <returns>An HTML input element whose type attribute is set to "text" for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the value.</typeparam>
            <exception cref="T:System.ArgumentException">The <paramref name="expression"/> parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 02:16:48 GMT"/>
        </member>
        <member name="M:SectionExtensions.TextBoxHelperHtml(System.Web.Mvc.HtmlHelper,System.Web.Mvc.ModelMetadata,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Returns a text input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
            <returns>An HTML input element whose type attribute is set to "text" for each property in the object that is represented by the expression.</returns>
            <param name="htmlHelper">The HTML helper instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the properties to render.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <param name="metadata"></param>
            <param name="model"></param>
            <exception cref="T:System.ArgumentException">The <paramref name="expression"/> parameter is null or empty.</exception>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 02:16:48 GMT"/>
        </member>
        <member name="M:SectionExtensions.ToReadableString(System.TimeSpan)">
            <summary>Formats a timespan as a readable string i.e days, hours, minutes, seconds - whatever is important</summary>
            <param name="span">The timespan to render</param>
            <created author="laurentiu.macovei" date="Fri, 15 Apr 2011 00:39:49 GMT"/>
        </member>
        <member name="M:SectionExtensions.IsNullOrEmpty(System.String)">
            <summary> Indicates whether the specified string is null or an System.String.Empty string. </summary>
            <param name="value">The string to test.</param>
            <returns>true if the value parameter is null or an empty string (""); otherwise, false</returns>
            <created author="laurentiu.macovei" date="Tue, 19 Apr 2011 15:30:51 GMT"/>
        </member>
        <member name="M:SectionExtensions.IsNullOrWhiteSpace(System.String)">
            <summary> Indicates whether a specified string is null, empty, or consists only of white-space characters. </summary>
            <param name="value">The string to test.</param>
            <returns>true if the value parameter is null or System.String.Empty, or if value consists exclusively of white-space characters.</returns>
            <created author="laurentiu.macovei" date="Tue, 19 Apr 2011 15:30:51 GMT"/>
        </member>
        <member name="M:SectionExtensions.Raw(System.Web.Mvc.HtmlHelper,System.Func{System.Object,System.Web.WebPages.HelperResult})">
            <summary>Returns markup that is not HTML encoded.</summary>
            <param name="html">The html helper to be extended</param>
            <param name="htmlFunc">The html </param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Thu, 05 Jan 2012 23:02:37 GMT"/>
        </member>
        <member name="M:SectionExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            </summary>
            <param name="html"></param>
            <param name="partialViewName"></param>
            <param name="model"></param>
            <param name="bag"></param>
            <param name="updateMainBag"></param>
            <param name="forwardBag"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 06 Jan 2012 00:11:04 GMT"/>
        </member>
        <member name="T:SectionExtensions.InputDataDelagete">
            <summary>The InputDataDelagete event handler</summary>
            <created author="laurentiu.macovei" date="Tue, 12 Apr 2011 02:16:49 GMT"/>
        </member>
        <member name="T:SectionExtensions.DependentSection">
            <summary>The DependentSection class</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="M:SectionExtensions.DependentSection.DefineDefaults(System.Web.WebPages.WebPageBase,System.Collections.Generic.Dictionary{System.String,System.Web.WebPages.SectionWriter}[])">
            <summary>
            </summary>
            <param name="page"></param>
            <param name="previousWriters"></param>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="P:SectionExtensions.DependentSection.Name">
            <summary>Gets or sets the Name</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="P:SectionExtensions.DependentSection.DefaultContent">
            <summary>Gets or sets the DefaultContent</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="P:SectionExtensions.DependentSection.Dependinces">
            <summary>Gets or sets the Dependinces</summary>
            <created author="laurentiu.macovei" date="Fri, 18 Mar 2011 02:23:33 GMT"/>
        </member>
        <member name="T:DisplayNameAttribute">
            <summary>i18N localized version of System.ComponentModel.DisplayNameAttribute class.
            <para>Specifies the display name for a property, event, or public void method which takes no arguments.</para>
            </summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 17:33:06 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.#ctor(System.String,System.Object[])">
            <summary>Creates a new instance of LocalizableAttribute</summary>
            <param name="name"></param>
            <param name="args"></param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 17:33:06 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetAutoGenerateField">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:19 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetAutoGenerateFilter">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:20 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetDescription">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:20 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetGroupName">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:20 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetName">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:20 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetOrder">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:20 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetPrompt">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:20 GMT"/>
        </member>
        <member name="M:DisplayNameAttribute.GetShortName">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:20 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.DisplayName">
            <summary>Gets the DisplayName</summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 17:33:06 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.Arguments">
            <summary>Gets or sets the Arguments</summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 17:33:06 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.AutoGenerateField">
            <summary>Gets or sets the AutoGenerateField</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:18 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.AutoGenerateFilter">
            <summary>Gets or sets the AutoGenerateFilter</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:18 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.Description">
            <summary>Gets or sets the Description</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:18 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.GroupName">
            <summary>Gets or sets the GroupName</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:18 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.Name">
            <summary>Gets or sets the Name</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:18 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.Order">
            <summary>Gets or sets the Order</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:19 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.Prompt">
            <summary>Gets or sets the Prompt</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:19 GMT"/>
        </member>
        <member name="P:DisplayNameAttribute.ShortName">
            <summary>Gets or sets the ShortName</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:19 GMT"/>
        </member>
        <member name="T:RangeAttribute">
            <summary>i18N localized version of System.ComponentModel.DataAnnotations.RangeAttribute class.
            <para>Specifies the numeric range constraints for the value of a data field.</para></summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:15 GMT"/>
        </member>
        <member name="M:RangeAttribute.#ctor(System.String,System.Double,System.Double)">
            <summary>Initializes a new instance of the System.ComponentModel.DataAnnotations.RangeAttribute class by using the specified minimum and maximum values whose error message is localized.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <param name="minimum">Specifies the minimum value allowed for the data field value.</param>
            <param name="maximum">Specifies the maximum value allowed for the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:15 GMT"/>
        </member>
        <member name="M:RangeAttribute.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the System.ComponentModel.DataAnnotations.RangeAttribute class by using the specified minimum and maximum values whose error message is localized. 
            <para>ErrorMessage is set to: </para>
            	<para>The field {0} must be between {1} and {2}.</para>
            </summary>
            <param name="minimum">Specifies the minimum value allowed for the data field value.</param>
            <param name="maximum">Specifies the maximum value allowed for the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:11:37 GMT"/>
        </member>
        <member name="M:RangeAttribute.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the System.ComponentModel.DataAnnotations.RangeAttribute class by using the specified minimum and maximum values whose error message is localized.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <param name="minimum">Specifies the minimum value allowed for the data field value.</param>
            <param name="maximum">Specifies the maximum value allowed for the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:15 GMT"/>
        </member>
        <member name="M:RangeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the System.ComponentModel.DataAnnotations.RangeAttribute class by using the specified minimum and maximum values whose error message is localized. 
            <para>ErrorMessage is set to: </para>
            	<para>The field {0} must be between {1} and {2}.</para>
            </summary>
            <param name="minimum">Specifies the minimum value allowed for the data field value.</param>
            <param name="maximum">Specifies the maximum value allowed for the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:23:27 GMT"/>
        </member>
        <member name="M:RangeAttribute.#ctor(System.String,System.Type,System.String,System.String)">
            <summary>Initializes a new instance of the System.ComponentModel.DataAnnotations.RangeAttribute class by using the specified minimum and maximum values whose error message is localized.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <param name="type">Specifies the type of the object to test.</param>
            <param name="minimum">Specifies the minimum value allowed for the data field value.</param>
            <param name="maximum">Specifies the maximum value allowed for the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:15 GMT"/>
        </member>
        <member name="M:RangeAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the System.ComponentModel.DataAnnotations.RangeAttribute class by using the specified minimum and maximum values whose error message is localized. 
            <para>ErrorMessage is set to: </para>
            	<para>The field {0} must be between {1} and {2}.</para>
            </summary>
            <param name="type">Specifies the type of the object to test.</param>
            <param name="minimum">Specifies the minimum value allowed for the data field value.</param>
            <param name="maximum">Specifies the maximum value allowed for the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:23:28 GMT"/>
        </member>
        <member name="M:RangeAttribute.FormatErrorMessage(System.String)">
            <summary>Formats the error message that is displayed when range validation fails.</summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>The localized formatted error message</returns>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:15 GMT"/>
        </member>
        <member name="T:RequiredAttribute">
            <summary>i18N localized version of System.ComponentModel.DataAnnotations.RequiredAttribute class.
            <para>Specifies that a data field value is required.</para></summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:15 GMT"/>
        </member>
        <member name="M:RequiredAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the System.ComponentModel.DataAnnotations.RequiredAttribute class whose error message is localized.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="M:RequiredAttribute.#ctor">
            <summary>
            	<para>Initializes a new instance of the System.ComponentModel.DataAnnotations.RequiredAttribute class whose error message is localized.</para>
            	<para>ErrorMessage is set to: </para>
            	<para>The {0} field is required.</para>
            </summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:04:48 GMT"/>
        </member>
        <member name="M:RequiredAttribute.FormatErrorMessage(System.String)">
            <summary>Applies formatting to an error message, based on the data field where the error occurred.</summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>The localized formatted error message</returns>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="T:RegularExpressionAttribute">
            <summary>i18N localized version of System.ComponentModel.DataAnnotations.RegularExpressionAttribute class.
            <para>Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</para></summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="M:RegularExpressionAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the System.ComponentModel.DataAnnotations.RegularExpressionAttribute class whose error message is localized.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <param name="pattern">The regular expression that is used to validate the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="M:RegularExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.ComponentModel.DataAnnotations.RegularExpressionAttribute class whose error message is localized. 
            <para>ErrorMessage is set to: </para>
            	<para>The field {0} must match the regular expression '{1}'.</para>
            </summary>
            <param name="pattern">The regular expression that is used to validate the data field value.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:04:07 GMT"/>
        </member>
        <member name="M:RegularExpressionAttribute.FormatErrorMessage(System.String)">
            <summary>Formats the error message to display if the regular expression validation fails.</summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>The localized formatted error message</returns>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="T:StringLengthAttribute">
            <summary>i18N localized version of System.ComponentModel.DataAnnotations.StringLengthAttribute class.
            <para>Specifies the minimum and maximum length of characters that are allowed in a data field.</para>
            </summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="M:StringLengthAttribute.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the System.ComponentModel.DataAnnotations.StringLengthAttribute class by using a specified maximum length  whose error message is localized.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <param name="maximumLength">The maximum length of a string.</param>
            <param name="minLenght">The minimum length of a string.</param>
            <created author="laurentiu.macovei" date="Fri, 13 Jan 2012 04:37:52 GMT"/>
        </member>
        <member name="M:StringLengthAttribute.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the System.ComponentModel.DataAnnotations.StringLengthAttribute class by using a specified maximum length  whose error message is localized.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <param name="maximumLength">The maximum length of a string.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="M:StringLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the System.ComponentModel.DataAnnotations.StringLengthAttribute class by using a specified maximum length  whose error message is localized. 
            <para>ErrorMessage is set to: </para>
            <para>The {0} must be at least {2} characters long.</para>
            </summary>
            <param name="maximumLength">The maximum length of a string.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:01:59 GMT"/>
        </member>
        <member name="M:StringLengthAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the System.ComponentModel.DataAnnotations.StringLengthAttribute class by using a specified maximum length  whose error message is localized. 
            <para>ErrorMessage is set to: </para>
            <para>The {0} must be at least {2} characters long but no longer than {1} characters.</para>
            </summary>
            <param name="maximumLength">The maximum length of a string.</param>
            <param name="minLength">The minimum length of the string.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:01:59 GMT"/>
        </member>
        <member name="M:StringLengthAttribute.FormatErrorMessage(System.String)">
            <summary>Applies formatting to a specified error message.</summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>The localized formatted error message</returns>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 18:14:16 GMT"/>
        </member>
        <member name="T:CompareAttribute">
            <summary>i18N localized version of System.Web.Mvc.CompareAttribute class.
            <para>Provides an attribute that compares two properties of a model.</para></summary>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:23:28 GMT"/>
        </member>
        <member name="M:CompareAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.CompareAttribute"/>class. 
            <para>ErrorMessage is set to: </para>
            	<para>'{0}' and '{1}' do not match.</para>
            </summary>
            <param name="otherProperty">The property to compare with the current property.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:23:28 GMT"/>
        </member>
        <member name="M:CompareAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.CompareAttribute"/> class.</summary>
            <param name="errorMessage">An error message to associate with a validation control if validation fails.</param>
            <param name="otherProperty">The property to compare with the current property.</param>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:23:29 GMT"/>
        </member>
        <member name="M:CompareAttribute.FormatErrorMessage(System.String)">
            <summary>Applies formatting to a specified error message.</summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>The localized formatted error message</returns>
            <created author="laurentiu.macovei" date="Mon, 26 Dec 2011 19:23:29 GMT"/>
        </member>
        <member name="T:PlaceHolderAttribute">
            <summary>Adds a localized version of the PlaceHolder attribute</summary>
            <created author="laurentiu.macovei" date="Sat, 07 Jan 2012 03:15:06 GMT"/>
        </member>
        <member name="M:PlaceHolderAttribute.#ctor(System.String)">
            <summary>Creates a new instance of PlaceHolderAttribute</summary>
            <param name="placeholder"></param>
            <created author="laurentiu.macovei" date="Sat, 07 Jan 2012 03:15:06 GMT"/>
        </member>
        <member name="M:PlaceHolderAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
            <summary>Provides metadata to the model metadata creation process.</summary>
            <param name="metadata">The model metadata.</param>
            <created author="laurentiu.macovei" date="Sat, 07 Jan 2012 03:15:06 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.ClientValidation.Rules.ModelClientValidationFileExtensionsRule">
            <summary>The ModelClientValidationFileExtensionsRule class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:56 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Rules.ModelClientValidationFileExtensionsRule.#ctor(System.String,System.String)">
            <summary>Creates a new instance of ModelClientValidationFileExtensionsRule</summary>
            <param name="errorMessage"></param>
            <param name="extensions"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:53:56 GMT"/>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.EqualToAttribute">
            <summary>
            Validates that the property has the same value as the given 'otherProperty' 
            </summary>
            <remarks>
            From Mvc3 Futures
            </remarks>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:30 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EqualToAttribute.#ctor(System.String)">
            <summary>Creates a new instance of EqualToAttribute</summary>
            <param name="otherProperty"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:30 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EqualToAttribute.#ctor(System.String,System.String)">
            <summary>Creates a new instance of EqualToAttribute</summary>
            <param name="errorMessage"></param>
            <param name="otherProperty"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:30 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EqualToAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:31 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EqualToAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            </summary>
            <param name="value"></param>
            <param name="validationContext"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:31 GMT"/>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.EqualToAttribute.OtherProperty">
            <summary>Gets the OtherProperty</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:30 GMT"/>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.EqualToAttribute.OtherPropertyDisplayName">
            <summary>Gets or sets the OtherPropertyDisplayName</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:31 GMT"/>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.EmailAttribute">
            <summary>The EmailAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:42 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EmailAttribute.#ctor">
            <summary>Creates a new instance of EmailAttribute</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:42 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EmailAttribute.#ctor(System.String)">
            <summary>Creates a new instance of EmailAttribute</summary>
            <param name="errorMessage"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:43 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EmailAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:43 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EmailAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:49:43 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.ClientValidation.Adapters.CreditCardAttributeAdapter">
            <summary>The CreditCardAttributeAdapter class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:33 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.CreditCardAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.CreditCardAttribute)">
            <summary>Creates a new instance of CreditCardAttributeAdapter</summary>
            <param name="metadata"></param>
            <param name="context"></param>
            <param name="attribute"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:33 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Adapters.CreditCardAttributeAdapter.GetClientValidationRules">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:52:33 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.MvcConfig">
            <summary>The MvcConfig class</summary>
            <created author="laurentiu.macovei" date="Thu, 05 Jan 2012 21:55:41 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.MvcConfig.#cctor">
            <summary>Static constructor of MvcConfig</summary>
            <created author="laurentiu.macovei" date="Thu, 05 Jan 2012 21:55:41 GMT"/>
        </member>
        <member name="P:System.Web.Mvc.MvcConfig.RequiredLabelText">
            <summary>Gets or sets the RequiredLabelText</summary>
            <created author="laurentiu.macovei" date="Thu, 05 Jan 2012 21:55:42 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.LocalizedViewEngine">
            <summary>The LocalizedViewEngine class</summary>
            <created author="laurentiu.macovei" date="Fri, 11 Nov 2011 23:48:59 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizedViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
            <summary>Finds the localized partial view</summary>
            <param name="controllerContext"></param>
            <param name="partialViewName"></param>
            <param name="useCache"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 11 Nov 2011 23:48:59 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.LocalizedViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
            <summary>Finds the localized view</summary>
            <param name="controllerContext"></param>
            <param name="viewName"></param>
            <param name="masterName"></param>
            <param name="useCache"></param>
            <created author="laurentiu.macovei" date="Fri, 11 Nov 2011 23:48:59 GMT"/>
        </member>
        <member name="T:System.Text.EnhancedStringBuilder">
            <summary>
            The EnhancedStringBuilder class
            </summary>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.#ctor">
            <summary>Creates a new instance of EnhancedStringBuilder</summary>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.#ctor(System.Int32)">
            <summary>Creates a new instance of EnhancedStringBuilder</summary>
            <param name="capacity"></param>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.#ctor(System.String)">
            <summary>Creates a new instance of EnhancedStringBuilder</summary>
            <param name="value"></param>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.#ctor(System.Int32,System.Int32)">
            <summary>Creates a new instance of EnhancedStringBuilder</summary>
            <param name="capacity"></param>
            <param name="maxCapacity"></param>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.#ctor(System.String,System.Int32)">
            <summary>Creates a new instance of EnhancedStringBuilder</summary>
            <param name="value"></param>
            <param name="capacity"></param>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Creates a new instance of EnhancedStringBuilder</summary>
            <param name="value"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <param name="capacity"></param>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.ToString">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.op_Implicit(System.Text.EnhancedStringBuilder)~System.String">
            <summary>
            </summary>
            <param name="sb"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 29 Jan 2007 20:15:00 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.op_Implicit(System.String)~System.Text.EnhancedStringBuilder">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 29 Jan 2007 23:45:10 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.op_Addition(System.Text.EnhancedStringBuilder,System.String)">
            <summary>
            </summary>
            <param name="sb"></param>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 29 Jan 2007 20:15:00 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.op_Addition(System.Text.EnhancedStringBuilder,System.Int32)">
            <summary>
            </summary>
            <param name="sb"></param>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Mon, 29 Jan 2007 20:15:40 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.op_Implicit(System.Text.EnhancedStringBuilder)~System.Text.StringBuilder">
            <summary>Gets the underlining string builder</summary>
            <param name="sb"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Thu, 18 Jan 2007 14:25:52 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Boolean)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Byte)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Char)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Decimal)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Int16)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Int32)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Int64)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Single)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.String)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.String[])">
            <summary>
            </summary>
            <param name="values"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Object[])">
            <summary>
            </summary>
            <param name="values"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 19 Jan 2011 23:11:48 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Text.EnhancedStringBuilder,System.String[])">
            <summary>
            </summary>
            <param name="values"></param>
            <param name="EnhancedStringBuilder"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Char[])">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Char,System.Int32)">
            <summary>
            </summary>
            <param name="value"></param>
            <param name="repeatCount"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.Char[],System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="value"></param>
            <param name="startIndex"></param>
            <param name="charCount"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Append(System.String,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="value"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.AppendFormat(System.String,System.Object[])">
            <summary>
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.AppendFormat(System.String,System.Object)">
            <summary>
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            </summary>
            <param name="provider"></param>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.AppendFormat(System.String,System.Object,System.Object)">
            <summary>
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.AppendLine">
            <summary>
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.AppendLine(System.String)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="sourceIndex"></param>
            <param name="destination"></param>
            <param name="destinationIndex"></param>
            <param name="count"></param>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.EnsureCapacity(System.Int32)">
            <summary>
            </summary>
            <param name="capacity"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Equals(System.Text.StringBuilder)">
            <summary>
            </summary>
            <param name="sb"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.ToString(System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Remove(System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Clear">
            <summary>Empties the string builder</summary>
            <created author="laurentiu.macovei" date="Sat, 02 Dec 2006 18:04:00 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Replace(System.Char,System.Char)">
            <summary>
            </summary>
            <param name="oldChar"></param>
            <param name="newChar"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Replace(System.String,System.String)">
            <summary>
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="M:System.Text.EnhancedStringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="oldChar"></param>
            <param name="newChar"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:31 GMT"/>
        </member>
        <member name="P:System.Text.EnhancedStringBuilder.Text">
            <summary>Returns the EnhancedStringBuilder.ToString()</summary>
            <created author="laurentiu.macovei" date="Sat, 18 Oct 2008 17:01:20 GMT"/>
        </member>
        <member name="P:System.Text.EnhancedStringBuilder.StringBuilder">
            <summary>Gets the underline StringBuilder</summary>
            <created author="laurentiu.macovei" date="Thu, 18 Jan 2007 14:23:36 GMT"/>
        </member>
        <member name="P:System.Text.EnhancedStringBuilder.Tag">
            <summary>Gets or sets the Tag</summary>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="P:System.Text.EnhancedStringBuilder.Capacity">
            <summary>Gets or sets the Capacity</summary>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="P:System.Text.EnhancedStringBuilder.Item(System.Int32)">
            <summary>Gets or sets the this</summary>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="P:System.Text.EnhancedStringBuilder.Length">
            <summary>Gets or sets the Length</summary>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="P:System.Text.EnhancedStringBuilder.MaxCapacity">
            <summary>Gets the MaxCapacity</summary>
            <created author="laurentiu.macovei" date="Wed, 29 Nov 2006 11:19:30 GMT"/>
        </member>
        <member name="T:System.Globalization.Message">
            <summary>A piece of text that may have been translated into another language.</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:58 GMT"/>
        </member>
        <member name="F:System.Globalization.Message.Empty">
            <summary>An empty message to be used fast</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:56:28 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.#ctor">
            <summary>Create a new, empty Message</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:58 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.#ctor(System.String)">
            <summary>Create a new Message, setting the msgID to the supplied value</summary>
            <param name="msgID"></param>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:58 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.#ctor(System.String,System.String)">
            <summary>Create a new Message, setting the supplied values</summary>
            <param name="msgID"></param>
            <param name="msgStr"></param>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:58 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.#ctor(System.String,System.String,System.String)">
            <summary>Create a new Message, setting the supplied values</summary>
            <param name="msgID"></param>
            <param name="msgStr"></param>
            <param name="firstContext"></param>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:58 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.ToString">
            <summary>
            Return the translated version of this message. 
            If no translation is available, return the message itself
            </summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:59 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.Encode(System.String)">
            <summary>Encodes a string line of text suitable for msgstr</summary>
            <param name="text"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 17:36:19 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.ToPOBlock">
            <summary>Return this message, formatted as it would appear in a .po file</summary>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:59 GMT"/>
        </member>
        <member name="M:System.Globalization.Message.GetText(System.Boolean)">
            <summary>
            Returns either the text or the msgid.
            You can specify whether to return the plural form.
            </summary>
            <param name="plural"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 17:36:19 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.MsgID">
            <summary>The original text of the message, as scraped from source code.</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:58 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.MsgID_Plural">
            <summary>The original plural text of the message, as scraped from source code.</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:59 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.HasPlural">
            <summary>Returns whether this message has a plural form</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:49:00 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.MsgStr">
            <summary>The translated text, or an empty string if the message has not yet been translated.</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:58 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.MsgStr_Plural">
            <summary>Gets or sets the MsgStr_Plural</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:50:16 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.Comments">
            <summary>
            <para>A list of comments found with this message in its .po file.</para>
            <para>Will only be populated if the loadComments flag is set while loading the Localization.</para>
            </summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:59 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.Contexts">
            <summary>
            <para>A list of filename:linenumber pairs representing where this message
            was found in the source code.</para>
            <para>Will only be populated if the loadComments flag is set while loading the Localization.</para>
            </summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:59 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.AutoID">
            <summary>
            <para>A temporary short ID that can be used for lookups.</para>
            <para>(but don't store it since it will change depending on the order in which messages are loaded)</para>
            </summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:59 GMT"/>
        </member>
        <member name="P:System.Globalization.Message.Translated">
            <summary>Gets or sets the Translated</summary>
            <created author="laurentiu.macovei" date="Fri, 25 Nov 2011 16:47:59 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.ClientValidation.Rules.ModelClientValidationMinRule">
            <summary>The ModelClientValidationMinRule class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:42 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.ClientValidation.Rules.ModelClientValidationMinRule.#ctor(System.String,System.Object)">
            <summary>Creates a new instance of ModelClientValidationMinRule</summary>
            <param name="errorMessage"></param>
            <param name="min"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 15:50:42 GMT"/>
        </member>
        <member name="T:System.Xml.XmlSerializationExtensions">
            <summary>The XmlSerializationExtensions class</summary>
            <created author="laurentiu.macovei" date="Thu, 24 Mar 2011 17:42:23 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToBinary``1(``0)">
            <summary>Converts the object to a binary array by serializing.</summary>
            <typeparam name="T">The type of item.</typeparam>
            <param name="item">The object to convert.</param>
            <returns>A serialized binary array of the object.</returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 01:42:59 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToObject``1(System.Byte[])">
            <summary>Deserializes an instance of T from a byte array.</summary>
            <param name="buffer">The byte array representing a T instance.</param>
            <returns>An instance of T that is deserialized from the byte array.</returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 01:42:59 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToXmlString``1(``0)">
            <summary>Returns an XML <see cref="T:System.String"/>that represents the current <see cref="T:System.Object"/>.</summary>
            <returns>An XML <see cref="T:System.String"/>that represents the current <see cref="T:System.Object"/>.</returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 01:42:59 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToXElement``1(``0,System.Xml.Linq.LoadOptions)">
            <summary>Returns an XML <see cref="T:XElement"/>that represents the current <typeparamref name="T"/>.</summary>
            <returns>An XML <see cref="T:XElement"/>that represents the current <typeparamref name="T"/>.</returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 01:42:59 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToObject``1(System.String)">
            <summary>Deserializes an instance of T from XML.</summary>
            <param name="xml">The XML string representing a T instance.</param>
            <returns>An instance of T that is deserialized from the XML string.</returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 01:42:59 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToBinary``1(System.Collections.Generic.ICollection{``0})">
            <summary>Converts the collection to a binary array by serializing.</summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
            <param name="collection">The collection to convert.</param>
            <returns>A serialized binary array of the collection.</returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 01:42:59 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToObject``1(System.Xml.Linq.XElement)">
            <summary>Deserializes the given XElement to <typeparamref name="T"/></summary>
            <param name="xElement">The XElement to be deserialized</param>
            <returns><typeparamref name="T"/>or default(<typeparamref name="T"/>) if the xElement was null</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Mar 2011 17:42:23 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToObject``1(System.Xml.Linq.XElement,``0)">
            <summary>Deserializes the given XElement to <typeparamref name="T"/></summary>
            <param name="xElement">The XElement to be deserialized</param>
            <param name="fakeForInferenceOnly">Not used, but useful when you want the type inference of VS to work for you :)</param>
            <returns><typeparamref name="T"/>or default(<typeparamref name="T"/>) if the xElement was null</returns>
            <created author="laurentiu.macovei" date="Thu, 24 Mar 2011 17:42:23 GMT"/>
        </member>
        <member name="M:System.Xml.XmlSerializationExtensions.ToCollection``1(System.Byte[])">
            <summary>Converts the byte array to a collection by deserializing.</summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
            <param name="buffer">The byte array to convert.</param>
            <returns>An instance of <see cref="T:System.Collections.Generic.ICollection`1"/>deserialized from the byte array.</returns>
            <created author="laurentiu.macovei" date="Sat, 26 Mar 2011 01:42:59 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.EnumSafeModelBinder">
            <summary>
            Removes Required validation on enums marked with [FlagsAttribute]
            <para>Automatically encodes the properties which have the HtmlEncodeAttribute(true)</para>
            <para>If user has provided no value, the binder automatically sets the value to the provided DefaultValueAttribute for that property</para>
            </summary>
            <created author="laurentiu.macovei" date="Sat, 11 Feb 2012 00:16:42 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.EnumSafeModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Sets the specified property by using the specified controller context, binding
            context, and property value.
            </summary>
            <param name="controllerContext">
            The context within which the controller operates. The context information
            includes the controller, HTTP content, request context, and route data.
            </param>
            <param name="bindingContext">
            The context within which the model is bound. The context includes information
            such as the model object, model name, model type, property filter, and value
            provider.
            </param>
            <param name="propertyDescriptor">
            Describes a property to be set. The descriptor provides information such
            as the component type, property type, and property value. It also provides
            methods to get or set the property value.
            </param>
            <param name="value">The value to set for the property.</param>
            <created author="laurentiu.macovei" date="Mon, 28 Mar 2011 22:39:37 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.EnumSafeModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>Binds the model by using the specified controller context and binding context.</summary>
            <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
            <param name="bindingContext">The context within which the model is bound. The context includes information ///     such as the model object, model name, model type, property filter, and value provider.</param>
            <exception cref="T:System.ArgumentNullException">The bindingContext parameter is null.</exception>
            <returns>The bound object.</returns>
            <created author="laurentiu.macovei" date="Fri, 08 Apr 2011 17:14:22 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.EnumSafeModelBinder.EnsureModelIsValid(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Object)">
            <summary>
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="model"></param>
            <created author="laurentiu.macovei" date="Fri, 08 Apr 2011 17:14:22 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.EnumSafeModelBinder.SetPropertyWithDefaultAttribute(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>Sets the specified property by using the specified controller context, binding context, and property value.</summary>
            <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data. </param>
            <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider. </param>
            <param name="propertyDescriptor">Describes a property to be set. The descriptor provides information such as the component type, property type, and property value. It also provides methods to get or set the property value. </param>
            <param name="value">The value to set for the property.</param>
            <created author="laurentiu.macovei" date="Fri, 08 Apr 2011 17:15:55 GMT"/>
        </member>
        <member name="T:System.Web.Mvc.EnhancedDataAnnotationsModelMetadataProvider">
            <summary>The EnhancedDataAnnotationsModelMetadataProvider class</summary>
            <created author="laurentiu.macovei" date="Sun, 27 Mar 2011 00:07:08 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.EnhancedDataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
            <summary>Gets the metadata for the specified property.</summary>
            <param name="attributes"></param>
            <param name="containerType"></param>
            <param name="modelAccessor"></param>
            <param name="modelType"></param>
            <param name="propertyName"></param>
            <created author="laurentiu.macovei" date="Sun, 27 Mar 2011 00:07:08 GMT"/>
        </member>
        <member name="M:System.Web.Mvc.EnhancedDataAnnotationsModelMetadataProvider.GetString(System.Object)">
            <summary>
            </summary>
            <param name="stringOrMvcString"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Sun, 27 Mar 2011 00:07:08 GMT"/>
        </member>
        <member name="T:System.Linq.SqlCacheDependencyGlobalNotifications">
            <summary>The SqlCacheDependencyGlobalNotifications class</summary>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 00:50:14 GMT"/>
        </member>
        <member name="M:System.Linq.SqlCacheDependencyGlobalNotifications.InitializeNotifications(System.String)">
            <summary>
            Initialize SQL 2005/2008/2008R2+ push notifications for LINQ queries (including EntityFramework)
            </summary>
            <param name="connectString"></param>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 00:50:14 GMT"/>
        </member>
        <member name="M:System.Linq.SqlCacheDependencyGlobalNotifications.NotificationCallback(System.Object,System.Data.SqlClient.SqlNotificationEventArgs)">
            <summary>
            </summary>
            <param name="o"></param>
            <param name="args"></param>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 00:50:15 GMT"/>
        </member>
        <member name="E:System.Linq.SqlCacheDependencyGlobalNotifications.OnChange">
            <summary></summary>
            <created author="laurentiu.macovei" date="Sat, 03 Mar 2012 00:50:14 GMT"/>
        </member>
        <member name="T:System.Linq.ECachedQuerySource">
            <summary>
            Possible sources where the result was returned from
            </summary>
        </member>
        <member name="F:System.Linq.ECachedQuerySource.None">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:System.Linq.ECachedQuerySource.FromCache">
            <summary>
            Result was returned from cache
            </summary>
        </member>
        <member name="F:System.Linq.ECachedQuerySource.FromQuery">
            <summary>
            Result was returned from the query
            </summary>
        </member>
        <member name="T:System.Linq.CachedEntry`1">
            <summary>
            A cached query entry in the caching dictionary
            This keeps track of the query result, the time added and current validity state
            </summary>
            <typeparam name="T">Type of the query result enumeration</typeparam>
        </member>
        <member name="F:System.Linq.CachedEntry`1.State">
            <summary>
            Current validity state.
            When this is ECachedEntryState.Invalid, the entry should be ignored if found in cache.
            </summary>
        </member>
        <member name="P:System.Linq.CachedEntry`1.List">
            <summary>
            The query result
            </summary>
        </member>
        <member name="P:System.Linq.CachedEntry`1.UtcTimeAdded">
            <summary>
            UTC time the entry was added to cache
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.DateAttribute">
            <summary>The DateAttribute class</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:25:17 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DateAttribute.#ctor">
            <summary>Creates a new instance of DateAttribute</summary>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:25:17 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DateAttribute.#ctor(System.String)">
            <summary>Creates a new instance of DateAttribute</summary>
            <param name="errorMessage"></param>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:25:17 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DateAttribute.FormatErrorMessage(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:25:17 GMT"/>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DateAttribute.IsValid(System.Object)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
            <created author="laurentiu.macovei" date="Fri, 24 Feb 2012 13:25:17 GMT"/>
        </member>
    </members>
</doc>
